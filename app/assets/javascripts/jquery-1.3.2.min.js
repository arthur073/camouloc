  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>highcharts-rails/javascripts/jquery-1.3.2.min.js at master · loudpixel/highcharts-rails</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />

    
    

    <meta content="authenticity_token" name="csrf-param" />
<meta content="wZPC0FRQ7tuGagNNaoyGle8oalkEaKqIr5YLiil1kx0=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/stylesheets/bundles/github-4f06bfcb765482de148632653957dde1423a93fc.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/stylesheets/bundles/github2-46369bcd6479421862314f2e59570847210cac02.css" media="screen" rel="stylesheet" type="text/css" />
    
    


    <script src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/frameworks-a450c7f907bdc1ee6b362ab1ecca811c761fd259.js" type="text/javascript"></script>
    
    <script defer="defer" src="https://a248.e.akamai.net/assets.github.com/javascripts/bundles/github-96cccb25f9b28a80ef5c90ab97de5e9a4d23fd1b.js" type="text/javascript"></script>
    
    

      <link rel='permalink' href='/loudpixel/highcharts-rails/blob/dd4355a3587431608553e6cc347260fecf207239/javascripts/jquery-1.3.2.min.js'>
    <meta property="og:title" content="highcharts-rails"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/loudpixel/highcharts-rails"/>
    <meta property="og:image" content="https://a248.e.akamai.net/assets.github.com/images/gravatars/gravatar-140.png?1334862345"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="highcharts-rails - A plugin for displaying Highcharts graphs in Rails"/>

    <meta name="description" content="highcharts-rails - A plugin for displaying Highcharts graphs in Rails" />

  <link href="https://github.com/loudpixel/highcharts-rails/commits/master.atom" rel="alternate" title="Recent Commits to highcharts-rails:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob linux vis-public env-production " data-blob-contribs-enabled="yes">
    <div id="wrapper">

    
    
    

      <div id="header" class="true clearfix">
        <div class="container clearfix">
          <a class="site-logo" href="https://github.com/">
            <!--[if IE]>
            <img alt="GitHub" class="github-logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7.png?1334862346" />
            <img alt="GitHub" class="github-logo-hover" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7-hover.png?1334862346" />
            <![endif]-->
            <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1337118066" />
            <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1337118066" />
          </a>

              
    <div class="topsearch  ">
        <form accept-charset="UTF-8" action="/search" id="top_search_form" method="get">
  <a href="/search" class="advanced-search tooltipped downwards" title="Advanced Search"><span class="mini-icon mini-icon-advanced-search"></span></a>
  <div class="search placeholder-field js-placeholder-field">
    <input type="text" class="search my_repos_autocompleter" id="global-search-field" name="q" results="5" spellcheck="false" autocomplete="off" data-autocomplete="my-repos-autocomplete" placeholder="Search&hellip;" data-hotkey="s" />
    <div id="my-repos-autocomplete" class="autocomplete-results">
      <ul class="js-navigation-container"></ul>
    </div>
    <input type="submit" value="Search" class="button">
    <span class="mini-icon mini-icon-search-input"></span>
  </div>
  <input type="hidden" name="type" value="Everything" />
  <input type="hidden" name="repo" value="" />
  <input type="hidden" name="langOverride" value="" />
  <input type="hidden" name="start_value" value="1" />
</form>

      <ul class="top-nav">
          <li class="explore"><a href="https://github.com/explore">Explore</a></li>
          <li><a href="https://gist.github.com">Gist</a></li>
          <li><a href="/blog">Blog</a></li>
        <li><a href="http://help.github.com">Help</a></li>
      </ul>
    </div>


            


  <div id="userbox">
    <div id="user">
      <a href="https://github.com/arthur073"><img height="20" src="https://secure.gravatar.com/avatar/2ba9d22cee2b4980fbfa46ff5a6b24a2?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="20" /></a>
      <a href="https://github.com/arthur073" class="name">arthur073</a>
    </div>
    <ul id="user-links">
      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a New Repo"><span class="mini-icon mini-icon-create"></span></a>
      </li>
      <li>
        <a href="/inbox/notifications" id="notifications" class="tooltipped downwards" title="Notifications">
          <span class="mini-icon mini-icon-notifications"></span>
        </a>
      </li>
      <li>
        <a href="/settings/profile" id="settings" class="tooltipped downwards" title="Account Settings">
          <span class="mini-icon mini-icon-account-settings"></span>
        </a>
      </li>
      <li>
          <a href="/logout" data-method="post" id="logout" class="tooltipped downwards" title="Log Out">
            <span class="mini-icon mini-icon-logout"></span>
          </a>
      </li>
    </ul>
  </div>



          
        </div>
      </div>

      

            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="container hentry">
        <div class="pagehead repohead instapaper_ignore readability-menu">
        <div class="title-actions-bar">
          



              <ul class="pagehead-actions">



          <li class="js-toggler-container js-social-container watch-button-container ">
            <span class="watch-button"><a href="/loudpixel/highcharts-rails/toggle_watch" class="minibutton btn-watch js-toggler-target lighter" data-remote="true" data-method="post" rel="nofollow"><span class="icon"></span> Watch</a><a class="social-count js-social-count" href="/loudpixel/highcharts-rails/watchers">68</a></span>
            <span class="unwatch-button"><a href="/loudpixel/highcharts-rails/toggle_watch" class="minibutton btn-unwatch js-toggler-target lighter" data-remote="true" data-method="post" rel="nofollow"><span class="icon"></span> Unwatch</a><a class="social-count js-social-count" href="/loudpixel/highcharts-rails/watchers">68</a></span>
          </li>

              <li><a href="/loudpixel/highcharts-rails/fork" class="minibutton btn-fork js-toggler-target fork-button lighter" rel="nofollow" data-method="post"><span class="icon"></span> Fork</a><a href="/loudpixel/highcharts-rails/network" class="social-count">13</a>
              </li>


    </ul>

          <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
            <span class="repo-label"><span>public</span></span>
            <span class="mega-icon mega-icon-public-repo"></span>
            <span class="author vcard">
<a href="/loudpixel" class="url fn" itemprop="url" rel="author">              <span itemprop="title">loudpixel</span>
              </a></span> /
            <strong><a href="/loudpixel/highcharts-rails" class="js-current-repository">highcharts-rails</a></strong>
          </h1>
        </div>

          

  <ul class="tabs">
    <li><a href="/loudpixel/highcharts-rails" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/loudpixel/highcharts-rails/network" highlight="repo_network">Network</a>
    <li><a href="/loudpixel/highcharts-rails/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/loudpixel/highcharts-rails/issues" highlight="repo_issues">Issues <span class='counter'>0</span></a></li>

      <li><a href="/loudpixel/highcharts-rails/wiki" highlight="repo_wiki">Wiki</a></li>

    <li><a href="/loudpixel/highcharts-rails/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>

  </ul>
 
<div class="frame frame-center tree-finder" style="display:none"
      data-tree-list-url="/loudpixel/highcharts-rails/tree-list/dd4355a3587431608553e6cc347260fecf207239"
      data-blob-url-prefix="/loudpixel/highcharts-rails/blob/dd4355a3587431608553e6cc347260fecf207239"
    >

  <div class="breadcrumb">
    <span class="bold"><a href="/loudpixel/highcharts-rails">highcharts-rails</a></span> /
    <input class="tree-finder-input js-navigation-enable" type="text" name="query" autocomplete="off" spellcheck="false">
  </div>

    <div class="octotip">
      <p>
        <a href="/loudpixel/highcharts-rails/dismiss-tree-finder-help" class="dismiss js-dismiss-tree-list-help" title="Hide this notice forever" rel="nofollow">Dismiss</a>
        <span class="bold">Octotip:</span> You've activated the <em>file finder</em>
        by pressing <span class="kbd">t</span> Start typing to filter the
        file list. Use <span class="kbd badmono">↑</span> and
        <span class="kbd badmono">↓</span> to navigate,
        <span class="kbd">enter</span> to view files.
      </p>
    </div>

  <table class="tree-browser" cellpadding="0" cellspacing="0">
    <tr class="js-header"><th>&nbsp;</th><th>name</th></tr>
    <tr class="js-no-results no-results" style="display: none">
      <th colspan="2">No matching files</th>
    </tr>
    <tbody class="js-results-list js-navigation-container">
    </tbody>
  </table>
</div>

<div id="jump-to-line" style="display:none">
  <h2>Jump to Line</h2>
  <form accept-charset="UTF-8">
    <input class="textfield" type="text">
    <div class="full-button">
      <button type="submit" class="classy">
        <span>Go</span>
      </button>
    </div>
  </form>
</div>


<div class="subnav-bar">

  <ul class="actions subnav">
    <li><a href="/loudpixel/highcharts-rails/tags" class="blank" highlight="repo_tags">Tags <span class="counter">0</span></a></li>
    <li><a href="/loudpixel/highcharts-rails/downloads" class="blank downloads-blank" highlight="repo_downloads">Downloads <span class="counter">0</span></a></li>
    
  </ul>

  <ul class="scope">
    <li class="switcher">

      <div class="context-menu-container js-menu-container js-context-menu">
        <a href="#"
           class="minibutton bigger switcher js-menu-target js-commitish-button btn-branch repo-tree"
           data-hotkey="w"
           data-master-branch="master"
           data-ref="master">
           <span><span class="icon"></span><i>branch:</i> master</span>
        </a>

        <div class="context-pane commitish-context js-menu-content">
          <a href="javascript:;" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
          <div class="context-title">Switch Branches/Tags</div>
          <div class="context-body pane-selector commitish-selector js-navigation-container">
            <div class="filterbar">
              <input type="text" id="context-commitish-filter-field" class="js-navigation-enable" placeholder="Filter branches/tags" data-filterable />

              <ul class="tabs">
                <li><a href="#" data-filter="branches" class="selected">Branches</a></li>
                <li><a href="#" data-filter="tags">Tags</a></li>
              </ul>
            </div>

            <div class="js-filter-tab js-filter-branches" data-filterable-for="context-commitish-filter-field">
              <div class="no-results js-not-filterable">Nothing to show</div>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target">
                  <h4>
                      <a href="/loudpixel/highcharts-rails/blob/master/javascripts/jquery-1.3.2.min.js" class="js-navigation-open" data-name="master" rel="nofollow">master</a>
                  </h4>
                </div>
            </div>

            <div class="js-filter-tab js-filter-tags" style="display:none" data-filterable-for="context-commitish-filter-field">
              <div class="no-results js-not-filterable">Nothing to show</div>
            </div>
          </div>
        </div><!-- /.commitish-context-context -->
      </div>

    </li>
  </ul>

  <ul class="subnav with-scope">

    <li><a href="/loudpixel/highcharts-rails" class="selected" highlight="repo_source">Files</a></li>
    <li><a href="/loudpixel/highcharts-rails/commits/master" highlight="repo_commits">Commits</a></li>
    <li><a href="/loudpixel/highcharts-rails/branches" class="" highlight="repo_branches" rel="nofollow">Branches <span class="counter">1</span></a></li>
  </ul>

</div>

  
  
  


          

        </div><!-- /.repohead -->

        





<!-- block_view_fragment_key: views10/v8/blob:v21:0029a333111e41626ff203268d2082c6 -->
  <div id="slider">

    <div class="breadcrumb" data-path="javascripts/jquery-1.3.2.min.js/">
      <b itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/loudpixel/highcharts-rails/tree/dd4355a3587431608553e6cc347260fecf207239" class="js-rewrite-sha" itemprop="url"><span itemprop="title">highcharts-rails</span></a></b> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/loudpixel/highcharts-rails/tree/dd4355a3587431608553e6cc347260fecf207239/javascripts" class="js-rewrite-sha" itemscope="url"><span itemprop="title">javascripts</span></a></span> / <strong class="final-path">jquery-1.3.2.min.js</strong> <span class="js-clippy mini-icon mini-icon-clippy " data-clipboard-text="javascripts/jquery-1.3.2.min.js" data-copied-hint="copied!" data-copy-hint="copy to clipboard"></span>
    </div>


      <div class="commit file-history-tease" data-path="javascripts/jquery-1.3.2.min.js/">
        <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/b363c53afa5ec212eb9cca3aa30b258b?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="24" />
        <span class="author"><a href="/abbottry">abbottry</a></span>
        <time class="js-relative-date" datetime="2010-02-08T19:00:31-08:00" title="2010-02-08 19:00:31">February 08, 2010</time>
        <div class="commit-title">
            <a href="/loudpixel/highcharts-rails/commit/2d9b7f906aeb0e7b7b47401782b847c04f3e3f65" class="message">Added jquery 1.3.2 script</a>
        </div>

        <div class="participation">
          <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
          
        </div>
        <div id="blob_contributors_box" style="display:none">
          <h2>Users on GitHub who have contributed to this file</h2>
          <ul class="facebox-user-list">
            <li>
              <img height="24" src="https://secure.gravatar.com/avatar/b363c53afa5ec212eb9cca3aa30b258b?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="24" />
              <a href="/abbottry">abbottry</a>
            </li>
          </ul>
        </div>
      </div>

    <div class="frames">
      <div class="frame frame-center" data-path="javascripts/jquery-1.3.2.min.js/" data-permalink-url="/loudpixel/highcharts-rails/blob/dd4355a3587431608553e6cc347260fecf207239/javascripts/jquery-1.3.2.min.js" data-title="highcharts-rails/javascripts/jquery-1.3.2.min.js at master · loudpixel/highcharts-rails · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">100644</span>
                  <span>19 lines (19 sloc)</span>
                <span>57.254 kb</span>
              </div>
              <ul class="button-group actions">
                  <li>
                    <a class="grouped-button file-edit-link minibutton bigger lighter js-rewrite-sha" href="/loudpixel/highcharts-rails/edit/dd4355a3587431608553e6cc347260fecf207239/javascripts/jquery-1.3.2.min.js" data-method="post" rel="nofollow" data-hotkey="e">Edit this file</a>
                  </li>

                <li>
                  <a href="/loudpixel/highcharts-rails/raw/master/javascripts/jquery-1.3.2.min.js" class="minibutton btn-raw grouped-button bigger lighter" id="raw-url"><span class="icon"></span>Raw</a>
                </li>
                  <li>
                    <a href="/loudpixel/highcharts-rails/blame/master/javascripts/jquery-1.3.2.min.js" class="minibutton btn-blame grouped-button bigger lighter"><span class="icon"></span>Blame</a>
                  </li>
                <li>
                  <a href="/loudpixel/highcharts-rails/commits/master/javascripts/jquery-1.3.2.min.js" class="minibutton btn-history grouped-button bigger lighter" rel="nofollow"><span class="icon"></span>History</a>
                </li>
              </ul>
            </div>
              <div class="data type-javascript">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
</pre>
          </td>
          <td width="100%">
                <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> * jQuery JavaScript Library v1.3.2</span></div><div class='line' id='LC3'><span class="cm"> * http://jquery.com/</span></div><div class='line' id='LC4'><span class="cm"> *</span></div><div class='line' id='LC5'><span class="cm"> * Copyright (c) 2009 John Resig</span></div><div class='line' id='LC6'><span class="cm"> * Dual licensed under the MIT and GPL licenses.</span></div><div class='line' id='LC7'><span class="cm"> * http://docs.jquery.com/License</span></div><div class='line' id='LC8'><span class="cm"> *</span></div><div class='line' id='LC9'><span class="cm"> * Date: 2009-02-19 17:34:21 -0500 (Thu, 19 Feb 2009)</span></div><div class='line' id='LC10'><span class="cm"> * Revision: 6246</span></div><div class='line' id='LC11'><span class="cm"> */</span></div><div class='line' id='LC12'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">$</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">)},</span><span class="nx">D</span><span class="o">=</span><span class="sr">/^[^&lt;]*(&lt;(.|\s)+&gt;)[^&gt;]*$|^#([\w-]+)$/</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/^.[^:#\[\.,]*$/</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="nx">E</span><span class="o">=</span><span class="nx">E</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">E</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">E</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||!</span><span class="nx">H</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">clean</span><span class="p">([</span><span class="nx">G</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="nx">H</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">id</span><span class="o">!=</span><span class="nx">G</span><span class="p">[</span><span class="mi">3</span><span class="p">]){</span><span class="k">return</span> <span class="nx">o</span><span class="p">().</span><span class="nx">find</span><span class="p">(</span><span class="nx">E</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">I</span><span class="o">||</span><span class="p">[]);</span><span class="nx">F</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nb">document</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="k">return</span> <span class="nx">F</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">o</span><span class="p">(</span><span class="nx">H</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">E</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">E</span><span class="p">)){</span><span class="k">return</span> <span class="nx">o</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="nx">E</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">selector</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">context</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">selector</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">context</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">setArray</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">?</span><span class="nx">E</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">E</span><span class="p">))},</span><span class="nx">selector</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">jquery</span><span class="o">:</span><span class="s2">&quot;1.3.2&quot;</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="nx">E</span><span class="p">]},</span><span class="nx">pushStack</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">F</span><span class="p">);</span><span class="nx">G</span><span class="p">.</span><span class="nx">prevObject</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">G</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">===</span><span class="s2">&quot;find&quot;</span><span class="p">){</span><span class="nx">G</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">?</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">E</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">G</span><span class="p">.</span><span class="nx">selector</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">H</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">E</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">}}</span><span class="k">return</span> <span class="nx">G</span><span class="p">},</span><span class="nx">setArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">each</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">)},</span><span class="nx">index</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">jquery</span><span class="o">?</span><span class="nx">E</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">attr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">F</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">F</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">===</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">[</span><span class="nx">G</span><span class="o">||</span><span class="s2">&quot;attr&quot;</span><span class="p">](</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">F</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">E</span><span class="o">=</span><span class="p">{};</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">H</span><span class="p">}}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">F</span> <span class="k">in</span> <span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">G</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">],</span><span class="nx">G</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">F</span><span class="p">))}})},</span><span class="nx">css</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">E</span><span class="o">==</span><span class="s2">&quot;width&quot;</span><span class="o">||</span><span class="nx">E</span><span class="o">==</span><span class="s2">&quot;height&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">F</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">g</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="s2">&quot;curCSS&quot;</span><span class="p">)},</span><span class="nx">text</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">F</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">append</span><span class="p">((</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nb">document</span><span class="p">).</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">F</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">F</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!=</span><span class="mi">8</span><span class="p">){</span><span class="nx">E</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!=</span><span class="mi">1</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">text</span><span class="p">([</span><span class="k">this</span><span class="p">])}})});</span><span class="k">return</span> <span class="nx">E</span><span class="p">},</span><span class="nx">wrapAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="p">).</span><span class="nx">clone</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">])}</span><span class="nx">F</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">}</span><span class="k">return</span> <span class="nx">G</span><span class="p">}).</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">wrapInner</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">contents</span><span class="p">().</span><span class="nx">wrapAll</span><span class="p">(</span><span class="nx">E</span><span class="p">)})},</span><span class="nx">wrap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">wrapAll</span><span class="p">(</span><span class="nx">E</span><span class="p">)})},</span><span class="nx">append</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">E</span><span class="p">)}})},</span><span class="nx">prepend</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kc">true</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)}})},</span><span class="nx">before</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">)})},</span><span class="nx">after</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">domManip</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)})},</span><span class="nx">end</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">prevObject</span><span class="o">||</span><span class="nx">o</span><span class="p">([])},</span><span class="nx">push</span><span class="o">:</span><span class="p">[].</span><span class="nx">push</span><span class="p">,</span><span class="nx">sort</span><span class="o">:</span><span class="p">[].</span><span class="nx">sort</span><span class="p">,</span><span class="nx">splice</span><span class="o">:</span><span class="p">[].</span><span class="nx">splice</span><span class="p">,</span><span class="nx">find</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">([],</span><span class="s2">&quot;find&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">F</span><span class="p">);</span><span class="k">return</span> <span class="nx">F</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">unique</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">)})),</span><span class="s2">&quot;find&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">)}},</span><span class="nx">clone</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">noCloneEvent</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">isXMLDoc</span><span class="p">(</span><span class="k">this</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">outerHTML</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">J</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">));</span><span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">}</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">clean</span><span class="p">([</span><span class="nx">I</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/ jQuery\d+=&quot;(?:\d+|null)&quot;/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)])[</span><span class="mi">0</span><span class="p">]}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">)}});</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">===</span><span class="kc">true</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">).</span><span class="nx">andSelf</span><span class="p">(),</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">E</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">).</span><span class="nx">andSelf</span><span class="p">().</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">!==</span><span class="nx">H</span><span class="p">[</span><span class="nx">F</span><span class="p">].</span><span class="nx">nodeName</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">H</span><span class="p">[</span><span class="nx">F</span><span class="p">],</span><span class="s2">&quot;events&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">K</span> <span class="k">in</span> <span class="nx">I</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">J</span> <span class="k">in</span> <span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">]){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">][</span><span class="nx">J</span><span class="p">],</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">][</span><span class="nx">J</span><span class="p">].</span><span class="nx">data</span><span class="p">)}}</span><span class="nx">F</span><span class="o">++</span><span class="p">})}</span><span class="k">return</span> <span class="nx">E</span><span class="p">},</span><span class="nx">filter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">)})</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">multiFilter</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">})),</span><span class="s2">&quot;filter&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">)},</span><span class="nx">closest</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">POS</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">?</span><span class="nx">G</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="nx">H</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="nx">H</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="nx">E</span><span class="p">)){</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="s2">&quot;closest&quot;</span><span class="p">,</span><span class="nx">F</span><span class="p">);</span><span class="k">return</span> <span class="nx">H</span><span class="p">}</span><span class="nx">H</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">F</span><span class="o">++</span><span class="p">}})},</span><span class="nx">not</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">E</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">E</span><span class="p">)){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">multiFilter</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">),</span><span class="s2">&quot;not&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">multiFilter</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">)}}</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">[</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="nx">g</span><span class="o">&amp;&amp;!</span><span class="nx">E</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">F</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="o">!=</span><span class="nx">E</span><span class="p">})},</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">unique</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(),</span><span class="k">typeof</span> <span class="nx">E</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">E</span><span class="p">))))},</span><span class="nx">is</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="o">!!</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">multiFilter</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">},</span><span class="nx">hasClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="o">!!</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">E</span><span class="p">)},</span><span class="nx">val</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="o">===</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;option&quot;</span><span class="p">)){</span><span class="k">return</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">value</span><span class="o">||</span><span class="p">{}).</span><span class="nx">specified</span><span class="o">?</span><span class="nx">E</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">E</span><span class="p">.</span><span class="nx">text</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="p">[],</span><span class="nx">M</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;select-one&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">H</span><span class="o">?</span><span class="nx">I</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">H</span><span class="o">?</span><span class="nx">I</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="nx">M</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">F</span><span class="o">&lt;</span><span class="nx">J</span><span class="p">;</span><span class="nx">F</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">M</span><span class="p">[</span><span class="nx">F</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">selected</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">G</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="p">}</span><span class="nx">L</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">K</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">L</span><span class="p">}</span><span class="k">return</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">value</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\r/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">K</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="nx">K</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!=</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">K</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="sr">/radio|checkbox/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">K</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">K</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;option&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">selected</span><span class="o">=</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">N</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="nx">N</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">N</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="o">=-</span><span class="mi">1</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">K</span><span class="p">}}})},</span><span class="nx">html</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">innerHTML</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/ jQuery\d+=&quot;(?:\d+|null)&quot;/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="nx">E</span><span class="p">)},</span><span class="nx">replaceWith</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">E</span><span class="p">).</span><span class="nx">remove</span><span class="p">()},</span><span class="nx">eq</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="o">+</span><span class="nx">E</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">slice</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">),</span><span class="s2">&quot;slice&quot;</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">))},</span><span class="nx">map</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">)}))},</span><span class="nx">andSelf</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prevObject</span><span class="p">)},</span><span class="nx">domManip</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">F</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">clean</span><span class="p">(</span><span class="nx">J</span><span class="p">,(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">I</span><span class="p">),</span><span class="nx">H</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">G</span><span class="o">&lt;</span><span class="nx">E</span><span class="p">;</span><span class="nx">G</span><span class="o">++</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="nx">H</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="nx">G</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="o">:</span><span class="nx">I</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">z</span><span class="p">)}}</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">O</span><span class="p">){</span><span class="k">return</span> <span class="nx">M</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="s2">&quot;table&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="s2">&quot;tr&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;tbody&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">N</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;tbody&quot;</span><span class="p">)))</span><span class="o">:</span><span class="nx">N</span><span class="p">}}};</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">;</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">src</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">url</span><span class="o">:</span><span class="nx">F</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">async</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;script&quot;</span><span class="p">})}</span><span class="k">else</span><span class="p">{</span><span class="nx">o</span><span class="p">.</span><span class="nx">globalEval</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">text</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">textContent</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">F</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">return</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="p">{},</span><span class="nx">H</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">J</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">){</span><span class="nx">E</span><span class="o">=</span><span class="nx">J</span><span class="p">;</span><span class="nx">J</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="nx">H</span><span class="o">=</span><span class="mi">2</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">J</span><span class="o">!==</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">J</span><span class="p">)){</span><span class="nx">J</span><span class="o">=</span><span class="p">{}}</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">==</span><span class="nx">H</span><span class="p">){</span><span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="o">--</span><span class="nx">H</span><span class="p">}</span><span class="k">for</span><span class="p">(;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">;</span><span class="nx">H</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">G</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">H</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">F</span> <span class="k">in</span> <span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">F</span><span class="p">],</span><span class="nx">L</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">F</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="o">===</span><span class="nx">L</span><span class="p">){</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">L</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">L</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="nx">J</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">K</span><span class="o">||</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="kc">null</span><span class="o">?</span><span class="p">[]</span><span class="o">:</span><span class="p">{}),</span><span class="nx">L</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="o">!==</span><span class="nx">g</span><span class="p">){</span><span class="nx">J</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">L</span><span class="p">}}}}}</span><span class="k">return</span> <span class="nx">J</span><span class="p">};</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/z-?index|font-?weight|opacity|zoom|line-?height/i</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">||</span><span class="p">{},</span><span class="nx">s</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">noConflict</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">=</span><span class="nx">y</span><span class="p">}</span><span class="k">return</span> <span class="nx">o</span><span class="p">},</span><span class="nx">isFunction</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">},</span><span class="nx">isArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">},</span><span class="nx">isXMLDoc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">!==</span><span class="s2">&quot;HTML&quot;</span><span class="o">||!!</span><span class="nx">E</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">isXMLDoc</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">)},</span><span class="nx">globalEval</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="sr">/\S/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">G</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span><span class="nx">E</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">scriptEval</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">G</span><span class="p">))}</span><span class="k">else</span><span class="p">{</span><span class="nx">E</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="nx">G</span><span class="p">}</span><span class="nx">F</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">F</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">E</span><span class="p">)}},</span><span class="nx">nodeName</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">==</span><span class="nx">E</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()},</span><span class="nx">each</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">===</span><span class="nx">g</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">E</span> <span class="k">in</span> <span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">E</span><span class="p">],</span><span class="nx">F</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="k">break</span><span class="p">}}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">H</span><span class="o">++</span><span class="p">],</span><span class="nx">F</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="k">break</span><span class="p">}}}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">===</span><span class="nx">g</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">E</span> <span class="k">in</span> <span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">E</span><span class="p">],</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">[</span><span class="nx">E</span><span class="p">])</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="k">break</span><span class="p">}}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">J</span><span class="p">)</span><span class="o">!==</span><span class="kc">false</span><span class="p">;</span><span class="nx">J</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="o">++</span><span class="nx">H</span><span class="p">]){}}}</span><span class="k">return</span> <span class="nx">G</span><span class="p">},</span><span class="nx">prop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">I</span><span class="p">)){</span><span class="nx">I</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">)}</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;curCSS&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">?</span><span class="nx">I</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="o">:</span><span class="nx">I</span><span class="p">},</span><span class="nx">className</span><span class="o">:</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">((</span><span class="nx">F</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">className</span><span class="p">,</span><span class="nx">H</span><span class="p">)){</span><span class="nx">E</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">className</span><span class="o">?</span><span class="s2">&quot; &quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">H</span><span class="p">}})},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">F</span><span class="o">!==</span><span class="nx">g</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">)}).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}},</span><span class="nx">has</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">inArray</span><span class="p">(</span><span class="nx">E</span><span class="p">,(</span><span class="nx">F</span><span class="p">.</span><span class="nx">className</span><span class="o">||</span><span class="nx">F</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">))</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">}},</span><span class="nx">swap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">F</span> <span class="k">in</span> <span class="nx">G</span><span class="p">){</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">F</span><span class="p">];</span><span class="nx">H</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">F</span><span class="p">]}</span><span class="nx">I</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">H</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">F</span> <span class="k">in</span> <span class="nx">G</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">]}},</span><span class="nx">css</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">==</span><span class="s2">&quot;width&quot;</span><span class="o">||</span><span class="nx">F</span><span class="o">==</span><span class="s2">&quot;height&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">},</span><span class="nx">K</span><span class="o">=</span><span class="nx">F</span><span class="o">==</span><span class="s2">&quot;width&quot;</span><span class="o">?</span><span class="p">[</span><span class="s2">&quot;Left&quot;</span><span class="p">,</span><span class="s2">&quot;Right&quot;</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;Top&quot;</span><span class="p">,</span><span class="s2">&quot;Bottom&quot;</span><span class="p">];</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(){</span><span class="nx">L</span><span class="o">=</span><span class="nx">F</span><span class="o">==</span><span class="s2">&quot;width&quot;</span><span class="o">?</span><span class="nx">H</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">:</span><span class="nx">H</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">===</span><span class="s2">&quot;border&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">){</span><span class="nx">L</span><span class="o">-=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">curCSS</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="s2">&quot;padding&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">===</span><span class="s2">&quot;margin&quot;</span><span class="p">){</span><span class="nx">L</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">curCSS</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="s2">&quot;margin&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">L</span><span class="o">-=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">curCSS</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="s2">&quot;border&quot;</span><span class="o">+</span><span class="k">this</span><span class="o">+</span><span class="s2">&quot;Width&quot;</span><span class="p">,</span><span class="kc">true</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">}})}</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">I</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="nx">o</span><span class="p">.</span><span class="nx">swap</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">I</span><span class="p">)}</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">L</span><span class="p">))}</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">curCSS</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">J</span><span class="p">)},</span><span class="nx">curCSS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">==</span><span class="s2">&quot;opacity&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">opacity</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">L</span><span class="o">==</span><span class="s2">&quot;&quot;</span><span class="o">?</span><span class="s2">&quot;1&quot;</span><span class="o">:</span><span class="nx">L</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/float/i</span><span class="p">)){</span><span class="nx">F</span><span class="o">=</span><span class="nx">w</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">]){</span><span class="nx">L</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">]}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/float/i</span><span class="p">)){</span><span class="nx">F</span><span class="o">=</span><span class="s2">&quot;float&quot;</span><span class="p">}</span><span class="nx">F</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([A-Z])/g</span><span class="p">,</span><span class="s2">&quot;-$1&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">F</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">==</span><span class="s2">&quot;opacity&quot;</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="o">==</span><span class="s2">&quot;&quot;</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="s2">&quot;1&quot;</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\-(\w)/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">O</span><span class="p">){</span><span class="k">return</span> <span class="nx">O</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()});</span><span class="nx">L</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">J</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^\d+(px)?$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">L</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="sr">/^\d/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">L</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">I</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">E</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">L</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">L</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">pixelLeft</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="nx">E</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">I</span><span class="p">.</span><span class="nx">runtimeStyle</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">K</span><span class="p">}}}}</span><span class="k">return</span> <span class="nx">L</span><span class="p">},</span><span class="nx">clean</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nx">K</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">K</span><span class="p">.</span><span class="nx">createElement</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">K</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nb">document</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">F</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="sr">/^&lt;(\w+)\s*\/?&gt;$/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">F</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">K</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">H</span><span class="p">[</span><span class="mi">1</span><span class="p">])]}}</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="p">[],</span><span class="nx">E</span><span class="o">=</span><span class="p">[],</span><span class="nx">L</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">P</span><span class="p">,</span><span class="nx">S</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">S</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="nx">S</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">S</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">S</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">S</span><span class="o">=</span><span class="nx">S</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(&lt;(\w+)[^&gt;]*?)\/&gt;/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i</span><span class="p">)</span><span class="o">?</span><span class="nx">U</span><span class="o">:</span><span class="nx">V</span><span class="o">+</span><span class="s2">&quot;&gt;&lt;/&quot;</span><span class="o">+</span><span class="nx">T</span><span class="o">+</span><span class="s2">&quot;&gt;&quot;</span><span class="p">});</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="nx">S</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=!</span><span class="nx">O</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&lt;opt&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;&lt;select multiple=&#39;multiple&#39;&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/select&gt;&quot;</span><span class="p">]</span><span class="o">||!</span><span class="nx">O</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&lt;leg&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;&lt;fieldset&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/fieldset&gt;&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">O</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^&lt;(thead|tbody|tfoot|colg|cap)/</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;&lt;table&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/table&gt;&quot;</span><span class="p">]</span><span class="o">||!</span><span class="nx">O</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&lt;tr&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;&lt;table&gt;&lt;tbody&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/tbody&gt;&lt;/table&gt;&quot;</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="o">!</span><span class="nx">O</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&lt;td&quot;</span><span class="p">)</span><span class="o">||!</span><span class="nx">O</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&lt;th&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="s2">&quot;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&quot;</span><span class="p">]</span><span class="o">||!</span><span class="nx">O</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&lt;col&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/colgroup&gt;&lt;/table&gt;&quot;</span><span class="p">]</span><span class="o">||!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">htmlSerialize</span><span class="o">&amp;&amp;</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;div&lt;div&gt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">]</span><span class="o">||</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">];</span><span class="nx">L</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">Q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">S</span><span class="o">+</span><span class="nx">Q</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">while</span><span class="p">(</span><span class="nx">Q</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">--</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">tbody</span><span class="p">){</span><span class="kd">var</span> <span class="nx">R</span><span class="o">=</span><span class="sr">/&lt;tbody/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">S</span><span class="p">),</span><span class="nx">N</span><span class="o">=!</span><span class="nx">O</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;&lt;table&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">R</span><span class="o">?</span><span class="nx">L</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">childNodes</span><span class="o">:</span><span class="nx">Q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;&lt;table&gt;&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">R</span><span class="o">?</span><span class="nx">L</span><span class="p">.</span><span class="nx">childNodes</span><span class="o">:</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">M</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="o">--</span><span class="nx">M</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">N</span><span class="p">[</span><span class="nx">M</span><span class="p">],</span><span class="s2">&quot;tbody&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">N</span><span class="p">[</span><span class="nx">M</span><span class="p">].</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">N</span><span class="p">[</span><span class="nx">M</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">N</span><span class="p">[</span><span class="nx">M</span><span class="p">])}}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">leadingWhitespace</span><span class="o">&amp;&amp;</span><span class="sr">/^\s/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">S</span><span class="p">)){</span><span class="nx">L</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">S</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^\s*/</span><span class="p">)[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">L</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)}</span><span class="nx">S</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">S</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="nx">G</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">S</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">merge</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">S</span><span class="p">)}});</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">];</span><span class="nx">J</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">],</span><span class="s2">&quot;script&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">].</span><span class="nx">type</span><span class="o">||</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">].</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;text/javascript&quot;</span><span class="p">)){</span><span class="nx">E</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">].</span><span class="nx">parentNode</span><span class="o">?</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">].</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">])</span><span class="o">:</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">])}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">G</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">G</span><span class="p">,[</span><span class="nx">J</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">].</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">))))}</span><span class="nx">I</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">J</span><span class="p">])}}</span><span class="k">return</span> <span class="nx">E</span><span class="p">}</span><span class="k">return</span> <span class="nx">G</span><span class="p">},</span><span class="nx">attr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">J</span><span class="o">||</span><span class="nx">J</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">3</span><span class="o">||</span><span class="nx">J</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">8</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=!</span><span class="nx">o</span><span class="p">.</span><span class="nx">isXMLDoc</span><span class="p">(</span><span class="nx">J</span><span class="p">),</span><span class="nx">L</span><span class="o">=</span><span class="nx">K</span><span class="o">!==</span><span class="nx">g</span><span class="p">;</span><span class="nx">G</span><span class="o">=</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">props</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">||</span><span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">tagName</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="sr">/href|src|style/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;selected&quot;</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span> <span class="k">in</span> <span class="nx">J</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="o">&amp;&amp;!</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;type&quot;</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="s2">&quot;input&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">){</span><span class="k">throw</span><span class="s2">&quot;type property can&#39;t be changed&quot;</span><span class="p">}</span><span class="nx">J</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="nx">K</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="s2">&quot;form&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="nx">G</span><span class="p">)){</span><span class="k">return</span> <span class="nx">J</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="nx">G</span><span class="p">).</span><span class="nx">nodeValue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;tabIndex&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="s2">&quot;tabIndex&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">specified</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">value</span><span class="o">:</span><span class="nx">J</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(button|input|object|select|textarea)/i</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">J</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(a|area)$/i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">.</span><span class="nx">href</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">g</span><span class="p">}</span><span class="k">return</span> <span class="nx">J</span><span class="p">[</span><span class="nx">G</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;style&quot;</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="s2">&quot;cssText&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">K</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">hrefNormalized</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="o">?</span><span class="nx">J</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="nx">J</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">return</span> <span class="nx">E</span><span class="o">===</span><span class="kc">null</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">E</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">opacity</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;opacity&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">filter</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/alpha\([^)]*\)/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">K</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="s2">&quot;NaN&quot;</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;alpha(opacity=&quot;</span><span class="o">+</span><span class="nx">K</span><span class="o">*</span><span class="mi">100</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">J</span><span class="p">.</span><span class="nx">filter</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;opacity=&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/opacity=([^)]*)/</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">100</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-([a-z])/ig</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">){</span><span class="k">return</span> <span class="nx">N</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()});</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="nx">J</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="nx">K</span><span class="p">}</span><span class="k">return</span> <span class="nx">J</span><span class="p">[</span><span class="nx">G</span><span class="p">]},</span><span class="nx">trim</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">E</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">makeArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">G</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">G</span><span class="p">)</span><span class="o">||</span><span class="nx">G</span><span class="p">.</span><span class="nx">setInterval</span><span class="p">){</span><span class="nx">E</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">while</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="nx">E</span><span class="p">[</span><span class="o">--</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">F</span><span class="p">]}}}</span><span class="k">return</span> <span class="nx">E</span><span class="p">},</span><span class="nx">inArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">E</span><span class="o">&lt;</span><span class="nx">F</span><span class="p">;</span><span class="nx">E</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">===</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">}}</span><span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">merge</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">getAll</span><span class="p">){</span><span class="k">while</span><span class="p">((</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="o">++</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!=</span><span class="mi">8</span><span class="p">){</span><span class="nx">H</span><span class="p">[</span><span class="nx">I</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">}}}</span><span class="k">else</span><span class="p">{</span><span class="k">while</span><span class="p">((</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="o">++</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="nx">H</span><span class="p">[</span><span class="nx">I</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">}}</span><span class="k">return</span> <span class="nx">H</span><span class="p">},</span><span class="nx">unique</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="p">[],</span><span class="nx">E</span><span class="o">=</span><span class="p">{};</span><span class="k">try</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">G</span><span class="o">&lt;</span><span class="nx">H</span><span class="p">;</span><span class="nx">G</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">K</span><span class="p">[</span><span class="nx">G</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">[</span><span class="nx">J</span><span class="p">]){</span><span class="nx">E</span><span class="p">[</span><span class="nx">J</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">K</span><span class="p">[</span><span class="nx">G</span><span class="p">])}}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">K</span><span class="p">}</span><span class="k">return</span> <span class="nx">F</span><span class="p">},</span><span class="nx">grep</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">;</span><span class="nx">H</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="o">!=!</span><span class="nx">J</span><span class="p">(</span><span class="nx">F</span><span class="p">[</span><span class="nx">H</span><span class="p">],</span><span class="nx">H</span><span class="p">)){</span><span class="nx">G</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">F</span><span class="p">[</span><span class="nx">H</span><span class="p">])}}</span><span class="k">return</span> <span class="nx">G</span><span class="p">},</span><span class="nx">map</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">J</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">G</span><span class="o">&lt;</span><span class="nx">H</span><span class="p">;</span><span class="nx">G</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="nx">F</span><span class="p">[</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">I</span><span class="p">}}</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">concat</span><span class="p">.</span><span class="nx">apply</span><span class="p">([],</span><span class="nx">F</span><span class="p">)}});</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">o</span><span class="p">.</span><span class="nx">browser</span><span class="o">=</span><span class="p">{</span><span class="nx">version</span><span class="o">:</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;0&quot;</span><span class="p">])[</span><span class="mi">1</span><span class="p">],</span><span class="nx">safari</span><span class="o">:</span><span class="sr">/webkit/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">),</span><span class="nx">opera</span><span class="o">:</span><span class="sr">/opera/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">),</span><span class="nx">msie</span><span class="o">:</span><span class="sr">/msie/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="sr">/opera/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">),</span><span class="nx">mozilla</span><span class="o">:</span><span class="sr">/mozilla/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="sr">/(compatible|webkit)/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">)};</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">parent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">},</span><span class="nx">parents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;parentNode&quot;</span><span class="p">)},</span><span class="nx">next</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">nth</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;nextSibling&quot;</span><span class="p">)},</span><span class="nx">prev</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">nth</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">)},</span><span class="nx">nextAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;nextSibling&quot;</span><span class="p">)},</span><span class="nx">prevAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">dir</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">)},</span><span class="nx">siblings</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">sibling</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">E</span><span class="p">)},</span><span class="nx">children</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">sibling</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)},</span><span class="nx">contents</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;iframe&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">E</span><span class="p">.</span><span class="nx">contentDocument</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">contentWindow</span><span class="p">.</span><span class="nb">document</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">G</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">multiFilter</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">unique</span><span class="p">(</span><span class="nx">H</span><span class="p">),</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">)}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">appendTo</span><span class="o">:</span><span class="s2">&quot;append&quot;</span><span class="p">,</span><span class="nx">prependTo</span><span class="o">:</span><span class="s2">&quot;prepend&quot;</span><span class="p">,</span><span class="nx">insertBefore</span><span class="o">:</span><span class="s2">&quot;before&quot;</span><span class="p">,</span><span class="nx">insertAfter</span><span class="o">:</span><span class="s2">&quot;after&quot;</span><span class="p">,</span><span class="nx">replaceAll</span><span class="o">:</span><span class="s2">&quot;replaceWith&quot;</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="p">[],</span><span class="nx">L</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">K</span><span class="o">&lt;</span><span class="nx">H</span><span class="p">;</span><span class="nx">K</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="p">(</span><span class="nx">K</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">F</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">o</span><span class="p">(</span><span class="nx">L</span><span class="p">[</span><span class="nx">K</span><span class="p">]),</span><span class="nx">I</span><span class="p">);</span><span class="nx">J</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">I</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pushStack</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">)}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">removeAttr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">E</span><span class="p">)}},</span><span class="nx">addClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">)},</span><span class="nx">removeClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">)},</span><span class="nx">toggleClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">E</span><span class="o">!==</span><span class="s2">&quot;boolean&quot;</span><span class="p">){</span><span class="nx">E</span><span class="o">=!</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">)}</span><span class="nx">o</span><span class="p">.</span><span class="nx">className</span><span class="p">[</span><span class="nx">E</span><span class="o">?</span><span class="s2">&quot;add&quot;</span><span class="o">:</span><span class="s2">&quot;remove&quot;</span><span class="p">](</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">)},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">E</span><span class="p">,[</span><span class="k">this</span><span class="p">]).</span><span class="nx">length</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">add</span><span class="p">([</span><span class="k">this</span><span class="p">]).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="k">this</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">)}}},</span><span class="nx">empty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">children</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span><span class="k">while</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)}}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}});</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">curCSS</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">F</span><span class="p">,</span><span class="kc">true</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="s2">&quot;jQuery&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">(),</span><span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="p">{};</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">cache</span><span class="o">:</span><span class="p">{},</span><span class="nx">data</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">F</span><span class="o">==</span><span class="nx">l</span><span class="o">?</span><span class="nx">A</span><span class="o">:</span><span class="nx">F</span><span class="p">;</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=++</span><span class="nx">v</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">H</span><span class="p">]){</span><span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">H</span><span class="p">]</span><span class="o">=</span><span class="p">{}}</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">!==</span><span class="nx">g</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">}</span><span class="k">return</span> <span class="nx">E</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">E</span><span class="p">]</span><span class="o">:</span><span class="nx">H</span><span class="p">},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">F</span><span class="o">==</span><span class="nx">l</span><span class="o">?</span><span class="nx">A</span><span class="o">:</span><span class="nx">F</span><span class="p">;</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">H</span><span class="p">]){</span><span class="k">delete</span> <span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">E</span><span class="p">];</span><span class="nx">E</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">E</span> <span class="k">in</span> <span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">H</span><span class="p">]){</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="nx">F</span><span class="p">)}}}</span><span class="k">else</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="k">delete</span> <span class="nx">F</span><span class="p">[</span><span class="nx">h</span><span class="p">]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">h</span><span class="p">)}}</span><span class="k">delete</span> <span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">H</span><span class="p">]}},</span><span class="nx">queue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="nx">E</span><span class="o">=</span><span class="p">(</span><span class="nx">E</span><span class="o">||</span><span class="s2">&quot;fx&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;queue&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">H</span><span class="p">)){</span><span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">H</span><span class="p">))}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">G</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">H</span><span class="p">)}}}</span><span class="k">return</span> <span class="nx">G</span><span class="p">},</span><span class="nx">dequeue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="o">||</span><span class="nx">G</span><span class="o">===</span><span class="s2">&quot;fx&quot;</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="mi">0</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">!==</span><span class="nx">g</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">H</span><span class="p">)}}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">data</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">H</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">H</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">===</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">triggerHandler</span><span class="p">(</span><span class="s2">&quot;getData&quot;</span><span class="o">+</span><span class="nx">H</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;!&quot;</span><span class="p">,[</span><span class="nx">H</span><span class="p">[</span><span class="mi">0</span><span class="p">]]);</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">E</span><span class="p">)}</span><span class="k">return</span> <span class="nx">F</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">H</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">:</span><span class="nx">F</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;setData&quot;</span><span class="o">+</span><span class="nx">H</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;!&quot;</span><span class="p">,[</span><span class="nx">H</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">G</span><span class="p">]).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">)})}},</span><span class="nx">removeData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">)})},</span><span class="nx">queue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">E</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="nx">E</span><span class="o">=</span><span class="s2">&quot;fx&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">===</span><span class="nx">g</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">E</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">==</span><span class="s2">&quot;fx&quot;</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="nx">G</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)}})},</span><span class="nx">dequeue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">)})}});</span></div><div class='line' id='LC13'><span class="cm">/*</span></div><div class='line' id='LC14'><span class="cm"> * Sizzle CSS Selector Engine - v0.9.3</span></div><div class='line' id='LC15'><span class="cm"> *  Copyright 2009, The Dojo Foundation</span></div><div class='line' id='LC16'><span class="cm"> *  Released under the MIT, BSD, and GPL Licenses.</span></div><div class='line' id='LC17'><span class="cm"> *  More information: http://sizzlejs.com/</span></div><div class='line' id='LC18'><span class="cm"> */</span></div><div class='line' id='LC19'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">R</span><span class="o">=</span><span class="sr">/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|[&#39;&quot;][^&#39;&quot;]*[&#39;&quot;]|[^[\]&#39;&quot;]+)+\]|\\.|[^ &gt;+~,(\[\\]+)+|[&gt;+~])(\s*,\s*)?/g</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">ab</span><span class="p">,</span><span class="nx">ac</span><span class="p">){</span><span class="nx">ab</span><span class="o">=</span><span class="nx">ab</span><span class="o">||</span><span class="p">[];</span><span class="nx">U</span><span class="o">=</span><span class="nx">U</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">9</span><span class="p">){</span><span class="k">return</span><span class="p">[]}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">Y</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">return</span> <span class="nx">ab</span><span class="p">}</span><span class="kd">var</span> <span class="nx">Z</span><span class="o">=</span><span class="p">[],</span><span class="nx">W</span><span class="p">,</span><span class="nx">af</span><span class="p">,</span><span class="nx">ai</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">ad</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">X</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">R</span><span class="p">.</span><span class="nx">lastIndex</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">while</span><span class="p">((</span><span class="nx">W</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">Y</span><span class="p">))</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="nx">Z</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">W</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">[</span><span class="mi">2</span><span class="p">]){</span><span class="nx">V</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">.</span><span class="nx">rightContext</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">Y</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">Z</span><span class="p">[</span><span class="mi">0</span><span class="p">]]){</span><span class="nx">af</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">Z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">Z</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">U</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">af</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">Z</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">?</span><span class="p">[</span><span class="nx">U</span><span class="p">]</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">U</span><span class="p">);</span><span class="k">while</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">Y</span><span class="p">]){</span><span class="nx">Y</span><span class="o">+=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">shift</span><span class="p">()}</span><span class="nx">af</span><span class="o">=</span><span class="nx">J</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">af</span><span class="p">)}}}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">ae</span><span class="o">=</span><span class="nx">ac</span><span class="o">?</span><span class="p">{</span><span class="nx">expr</span><span class="o">:</span><span class="nx">Z</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">set</span><span class="o">:</span><span class="nx">E</span><span class="p">(</span><span class="nx">ac</span><span class="p">)}</span><span class="o">:</span><span class="nx">F</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">?</span><span class="nx">U</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">:</span><span class="nx">U</span><span class="p">,</span><span class="nx">Q</span><span class="p">(</span><span class="nx">U</span><span class="p">));</span><span class="nx">af</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">ae</span><span class="p">.</span><span class="nx">expr</span><span class="p">,</span><span class="nx">ae</span><span class="p">.</span><span class="nx">set</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">ai</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">af</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">X</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ah</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">ag</span><span class="o">=</span><span class="nx">ah</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">ah</span><span class="p">]){</span><span class="nx">ah</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">ag</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">pop</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">ag</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">ag</span><span class="o">=</span><span class="nx">U</span><span class="p">}</span><span class="nx">I</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">ah</span><span class="p">](</span><span class="nx">ai</span><span class="p">,</span><span class="nx">ag</span><span class="p">,</span><span class="nx">Q</span><span class="p">(</span><span class="nx">U</span><span class="p">))}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ai</span><span class="p">){</span><span class="nx">ai</span><span class="o">=</span><span class="nx">af</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ai</span><span class="p">){</span><span class="k">throw</span><span class="s2">&quot;Syntax error, unrecognized expression: &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">ah</span><span class="o">||</span><span class="nx">Y</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">ai</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">X</span><span class="p">){</span><span class="nx">ab</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">ab</span><span class="p">,</span><span class="nx">ai</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aa</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">ai</span><span class="p">[</span><span class="nx">aa</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">aa</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ai</span><span class="p">[</span><span class="nx">aa</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">ai</span><span class="p">[</span><span class="nx">aa</span><span class="p">]</span><span class="o">===</span><span class="kc">true</span><span class="o">||</span><span class="nx">ai</span><span class="p">[</span><span class="nx">aa</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">ai</span><span class="p">[</span><span class="nx">aa</span><span class="p">]))){</span><span class="nx">ab</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">af</span><span class="p">[</span><span class="nx">aa</span><span class="p">])}}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aa</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">ai</span><span class="p">[</span><span class="nx">aa</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">aa</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ai</span><span class="p">[</span><span class="nx">aa</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">ai</span><span class="p">[</span><span class="nx">aa</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">ab</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">af</span><span class="p">[</span><span class="nx">aa</span><span class="p">])}}}}}</span><span class="k">else</span><span class="p">{</span><span class="nx">E</span><span class="p">(</span><span class="nx">ai</span><span class="p">,</span><span class="nx">ab</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">ab</span><span class="p">,</span><span class="nx">ac</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">hasDuplicate</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">ab</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">hasDuplicate</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">aa</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">aa</span><span class="o">&lt;</span><span class="nx">ab</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">aa</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ab</span><span class="p">[</span><span class="nx">aa</span><span class="p">]</span><span class="o">===</span><span class="nx">ab</span><span class="p">[</span><span class="nx">aa</span><span class="o">-</span><span class="mi">1</span><span class="p">]){</span><span class="nx">ab</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">aa</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">)}}}}}</span><span class="k">return</span> <span class="nx">ab</span><span class="p">};</span><span class="nx">F</span><span class="p">.</span><span class="nx">matches</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">U</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">U</span><span class="p">)};</span><span class="nx">F</span><span class="p">.</span><span class="nx">find</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">aa</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">ab</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Z</span><span class="p">,</span><span class="nx">X</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">aa</span><span class="p">){</span><span class="k">return</span><span class="p">[]}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">order</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">W</span><span class="o">&lt;</span><span class="nx">V</span><span class="p">;</span><span class="nx">W</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">order</span><span class="p">[</span><span class="nx">W</span><span class="p">],</span><span class="nx">X</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">X</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">Y</span><span class="p">].</span><span class="nx">exec</span><span class="p">(</span><span class="nx">aa</span><span class="p">))){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">.</span><span class="nx">leftContext</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;\\&quot;</span><span class="p">){</span><span class="nx">X</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">Z</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">find</span><span class="p">[</span><span class="nx">Y</span><span class="p">](</span><span class="nx">X</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">ab</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="nx">aa</span><span class="o">=</span><span class="nx">aa</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">Y</span><span class="p">],</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">}}}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Z</span><span class="p">){</span><span class="nx">Z</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">)}</span><span class="k">return</span><span class="p">{</span><span class="nx">set</span><span class="o">:</span><span class="nx">Z</span><span class="p">,</span><span class="nx">expr</span><span class="o">:</span><span class="nx">aa</span><span class="p">}};</span><span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">ad</span><span class="p">,</span><span class="nx">ac</span><span class="p">,</span><span class="nx">ag</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">ad</span><span class="p">,</span><span class="nx">ai</span><span class="o">=</span><span class="p">[],</span><span class="nx">aa</span><span class="o">=</span><span class="nx">ac</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Z</span><span class="o">=</span><span class="nx">ac</span><span class="o">&amp;&amp;</span><span class="nx">ac</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Q</span><span class="p">(</span><span class="nx">ac</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">while</span><span class="p">(</span><span class="nx">ad</span><span class="o">&amp;&amp;</span><span class="nx">ac</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">ab</span> <span class="k">in</span> <span class="nx">I</span><span class="p">.</span><span class="nx">filter</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">Y</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">ab</span><span class="p">].</span><span class="nx">exec</span><span class="p">(</span><span class="nx">ad</span><span class="p">))</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">filter</span><span class="p">[</span><span class="nx">ab</span><span class="p">],</span><span class="nx">ah</span><span class="p">,</span><span class="nx">af</span><span class="p">;</span><span class="nx">T</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aa</span><span class="o">==</span><span class="nx">ai</span><span class="p">){</span><span class="nx">ai</span><span class="o">=</span><span class="p">[]}</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">preFilter</span><span class="p">[</span><span class="nx">ab</span><span class="p">]){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">preFilter</span><span class="p">[</span><span class="nx">ab</span><span class="p">](</span><span class="nx">Y</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="nx">ag</span><span class="p">,</span><span class="nx">ai</span><span class="p">,</span><span class="nx">W</span><span class="p">,</span><span class="nx">Z</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">){</span><span class="nx">T</span><span class="o">=</span><span class="nx">ah</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="o">===</span><span class="kc">true</span><span class="p">){</span><span class="k">continue</span><span class="p">}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="mi">0</span><span class="p">;(</span><span class="nx">af</span><span class="o">=</span><span class="nx">aa</span><span class="p">[</span><span class="nx">X</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">X</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">af</span><span class="p">){</span><span class="nx">ah</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">af</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">aa</span><span class="p">);</span><span class="kd">var</span> <span class="nx">ae</span><span class="o">=</span><span class="nx">W</span><span class="o">^!!</span><span class="nx">ah</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ag</span><span class="o">&amp;&amp;</span><span class="nx">ah</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ae</span><span class="p">){</span><span class="nx">T</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">aa</span><span class="p">[</span><span class="nx">X</span><span class="p">]</span><span class="o">=</span><span class="kc">false</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ae</span><span class="p">){</span><span class="nx">ai</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">af</span><span class="p">);</span><span class="nx">T</span><span class="o">=</span><span class="kc">true</span><span class="p">}}}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">ah</span><span class="o">!==</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ag</span><span class="p">){</span><span class="nx">aa</span><span class="o">=</span><span class="nx">ai</span><span class="p">}</span><span class="nx">ad</span><span class="o">=</span><span class="nx">ad</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">ab</span><span class="p">],</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="p">[]}</span><span class="k">break</span><span class="p">}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">ad</span><span class="o">==</span><span class="nx">V</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="k">throw</span><span class="s2">&quot;Syntax error, unrecognized expression: &quot;</span><span class="o">+</span><span class="nx">ad</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">break</span><span class="p">}}</span><span class="nx">V</span><span class="o">=</span><span class="nx">ad</span><span class="p">}</span><span class="k">return</span> <span class="nx">aa</span><span class="p">};</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">selectors</span><span class="o">=</span><span class="p">{</span><span class="nx">order</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;ID&quot;</span><span class="p">,</span><span class="s2">&quot;NAME&quot;</span><span class="p">,</span><span class="s2">&quot;TAG&quot;</span><span class="p">],</span><span class="nx">match</span><span class="o">:</span><span class="p">{</span><span class="nx">ID</span><span class="o">:</span><span class="sr">/#((?:[\w\u00c0-\uFFFF_-]|\\.)+)/</span><span class="p">,</span><span class="nx">CLASS</span><span class="o">:</span><span class="sr">/\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/</span><span class="p">,</span><span class="nx">NAME</span><span class="o">:</span><span class="sr">/\[name=[&#39;&quot;]*((?:[\w\u00c0-\uFFFF_-]|\\.)+)[&#39;&quot;]*\]/</span><span class="p">,</span><span class="nx">ATTR</span><span class="o">:</span><span class="sr">/\[\s*((?:[\w\u00c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=)\s*([&#39;&quot;]*)(.*?)\3|)\s*\]/</span><span class="p">,</span><span class="nx">TAG</span><span class="o">:</span><span class="sr">/^((?:[\w\u00c0-\uFFFF\*_-]|\\.)+)/</span><span class="p">,</span><span class="nx">CHILD</span><span class="o">:</span><span class="sr">/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/</span><span class="p">,</span><span class="nx">POS</span><span class="o">:</span><span class="sr">/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/</span><span class="p">,</span><span class="nx">PSEUDO</span><span class="o">:</span><span class="sr">/:((?:[\w\u00c0-\uFFFF_-]|\\.)+)(?:\(([&#39;&quot;]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/</span><span class="p">},</span><span class="nx">attrMap</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="s2">&quot;className&quot;</span><span class="p">,</span><span class="s2">&quot;for&quot;</span><span class="o">:</span><span class="s2">&quot;htmlFor&quot;</span><span class="p">},</span><span class="nx">attrHandle</span><span class="o">:</span><span class="p">{</span><span class="nx">href</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)}},</span><span class="nx">relative</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;+&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">aa</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">T</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">,</span><span class="nx">ab</span><span class="o">=</span><span class="nx">X</span><span class="o">&amp;&amp;!</span><span class="sr">/\W/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">T</span><span class="p">),</span><span class="nx">Y</span><span class="o">=</span><span class="nx">X</span><span class="o">&amp;&amp;!</span><span class="nx">ab</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ab</span><span class="o">&amp;&amp;!</span><span class="nx">Z</span><span class="p">){</span><span class="nx">T</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="nx">aa</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">U</span><span class="p">;</span><span class="nx">W</span><span class="o">&lt;</span><span class="nx">V</span><span class="p">;</span><span class="nx">W</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="nx">U</span><span class="o">=</span><span class="nx">aa</span><span class="p">[</span><span class="nx">W</span><span class="p">])){</span><span class="k">while</span><span class="p">((</span><span class="nx">U</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">!==</span><span class="mi">1</span><span class="p">){}</span><span class="nx">aa</span><span class="p">[</span><span class="nx">W</span><span class="p">]</span><span class="o">=</span><span class="nx">Y</span><span class="o">||</span><span class="nx">U</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">===</span><span class="nx">T</span><span class="o">?</span><span class="nx">U</span><span class="o">||</span><span class="kc">false</span><span class="o">:</span><span class="nx">U</span><span class="o">===</span><span class="nx">T</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="kc">true</span><span class="p">)}},</span><span class="s2">&quot;&gt;&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Z</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">aa</span><span class="p">){</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">U</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="o">&amp;&amp;!</span><span class="sr">/\W/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">U</span><span class="p">)){</span><span class="nx">U</span><span class="o">=</span><span class="nx">aa</span><span class="o">?</span><span class="nx">U</span><span class="o">:</span><span class="nx">U</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">V</span><span class="o">&lt;</span><span class="nx">T</span><span class="p">;</span><span class="nx">V</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="nx">Z</span><span class="p">[</span><span class="nx">V</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">Z</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">=</span><span class="nx">W</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">===</span><span class="nx">U</span><span class="o">?</span><span class="nx">W</span><span class="o">:</span><span class="kc">false</span><span class="p">}}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">V</span><span class="o">&lt;</span><span class="nx">T</span><span class="p">;</span><span class="nx">V</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="nx">Z</span><span class="p">[</span><span class="nx">V</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="nx">Z</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">=</span><span class="nx">X</span><span class="o">?</span><span class="nx">Y</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">:</span><span class="nx">Y</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">===</span><span class="nx">U</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">Z</span><span class="p">,</span><span class="kc">true</span><span class="p">)}}},</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">L</span><span class="o">++</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">S</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">U</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\W/</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="nx">U</span><span class="o">=</span><span class="nx">Y</span><span class="o">?</span><span class="nx">U</span><span class="o">:</span><span class="nx">U</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="nx">T</span><span class="o">=</span><span class="nx">P</span><span class="p">}</span><span class="nx">T</span><span class="p">(</span><span class="s2">&quot;parentNode&quot;</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">W</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">Y</span><span class="p">)},</span><span class="s2">&quot;~&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">L</span><span class="o">++</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">S</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">U</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">U</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\W/</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="nx">U</span><span class="o">=</span><span class="nx">Y</span><span class="o">?</span><span class="nx">U</span><span class="o">:</span><span class="nx">U</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="nx">T</span><span class="o">=</span><span class="nx">P</span><span class="p">}</span><span class="nx">T</span><span class="p">(</span><span class="s2">&quot;previousSibling&quot;</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">W</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">Y</span><span class="p">)}},</span><span class="nx">find</span><span class="o">:</span><span class="p">{</span><span class="nx">ID</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">V</span><span class="p">.</span><span class="nx">getElementById</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">W</span><span class="p">){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">U</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">return</span> <span class="nx">T</span><span class="o">?</span><span class="p">[</span><span class="nx">T</span><span class="p">]</span><span class="o">:</span><span class="p">[]}},</span><span class="nx">NAME</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">Z</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">getElementsByName</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="p">[],</span><span class="nx">X</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">getElementsByName</span><span class="p">(</span><span class="nx">V</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">W</span><span class="o">&lt;</span><span class="nx">T</span><span class="p">;</span><span class="nx">W</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="nx">W</span><span class="p">].</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)</span><span class="o">===</span><span class="nx">V</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="nx">U</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="nx">W</span><span class="p">])}}</span><span class="k">return</span> <span class="nx">U</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">U</span><span class="p">}},</span><span class="nx">TAG</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">U</span><span class="p">){</span><span class="k">return</span> <span class="nx">U</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">T</span><span class="p">[</span><span class="mi">1</span><span class="p">])}},</span><span class="nx">preFilter</span><span class="o">:</span><span class="p">{</span><span class="nx">CLASS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Z</span><span class="p">,</span><span class="nx">aa</span><span class="p">){</span><span class="nx">W</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">W</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">aa</span><span class="p">){</span><span class="k">return</span> <span class="nx">W</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Y</span><span class="p">;(</span><span class="nx">Y</span><span class="o">=</span><span class="nx">U</span><span class="p">[</span><span class="nx">X</span><span class="p">])</span><span class="o">!=</span><span class="kc">null</span><span class="p">;</span><span class="nx">X</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="o">^</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">className</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">Y</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">W</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">V</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">Y</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="p">){</span><span class="nx">U</span><span class="p">[</span><span class="nx">X</span><span class="p">]</span><span class="o">=</span><span class="kc">false</span><span class="p">}}}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">},</span><span class="nx">ID</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">TAG</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">T</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">===</span><span class="kc">false</span><span class="p">;</span><span class="nx">V</span><span class="o">++</span><span class="p">){}</span><span class="k">return</span> <span class="nx">T</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Q</span><span class="p">(</span><span class="nx">T</span><span class="p">[</span><span class="nx">V</span><span class="p">])</span><span class="o">?</span><span class="nx">U</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">U</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()},</span><span class="nx">CHILD</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;nth&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="sr">/(-?)(\d*)n((?:\+|-)?\d*)/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">T</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;even&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;2n&quot;</span><span class="o">||</span><span class="nx">T</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;odd&quot;</span><span class="o">&amp;&amp;</span><span class="s2">&quot;2n+1&quot;</span><span class="o">||!</span><span class="sr">/\D/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">T</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="s2">&quot;0n+&quot;</span><span class="o">+</span><span class="nx">T</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">T</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="nx">T</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">U</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">U</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="p">))</span><span class="o">-</span><span class="mi">0</span><span class="p">;</span><span class="nx">T</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">U</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="p">}</span><span class="nx">T</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">L</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">T</span><span class="p">},</span><span class="nx">ATTR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">Z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="nx">X</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Z</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">attrMap</span><span class="p">[</span><span class="nx">W</span><span class="p">]){</span><span class="nx">X</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">attrMap</span><span class="p">[</span><span class="nx">W</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;~=&quot;</span><span class="p">){</span><span class="nx">X</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">X</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">X</span><span class="p">},</span><span class="nx">PSEUDO</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;not&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="nx">R</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="sr">/^\w/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">3</span><span class="p">])){</span><span class="nx">X</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">U</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="kc">true</span><span class="o">^</span><span class="nx">Y</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">V</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">W</span><span class="p">)}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">POS</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">CHILD</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">0</span><span class="p">])){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}}</span><span class="k">return</span> <span class="nx">X</span><span class="p">},</span><span class="nx">POS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="k">return</span> <span class="nx">T</span><span class="p">}},</span><span class="nx">filters</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">disabled</span><span class="o">===</span><span class="kc">false</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="o">!==</span><span class="s2">&quot;hidden&quot;</span><span class="p">},</span><span class="nx">disabled</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">disabled</span><span class="o">===</span><span class="kc">true</span><span class="p">},</span><span class="nx">checked</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">checked</span><span class="o">===</span><span class="kc">true</span><span class="p">},</span><span class="nx">selected</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">selectedIndex</span><span class="p">;</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">selected</span><span class="o">===</span><span class="kc">true</span><span class="p">},</span><span class="nx">parent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="o">!!</span><span class="nx">T</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">},</span><span class="nx">empty</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="o">!</span><span class="nx">T</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">},</span><span class="nx">has</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="o">!!</span><span class="nx">F</span><span class="p">(</span><span class="nx">T</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">V</span><span class="p">).</span><span class="nx">length</span><span class="p">},</span><span class="nx">header</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="sr">/h\d/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)},</span><span class="nx">text</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;text&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">radio</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;radio&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">checkbox</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;checkbox&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">file</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;file&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">password</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;password&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">submit</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;submit&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">image</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;image&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;reset&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="p">},</span><span class="nx">button</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;button&quot;</span><span class="o">===</span><span class="nx">T</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;BUTTON&quot;</span><span class="p">},</span><span class="nx">input</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="sr">/input|select|textarea|button/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)}},</span><span class="nx">setFilters</span><span class="o">:</span><span class="p">{</span><span class="nx">first</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="o">===</span><span class="mi">0</span><span class="p">},</span><span class="nx">last</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="k">return</span> <span class="nx">U</span><span class="o">===</span><span class="nx">W</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">},</span><span class="nx">even</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="o">%</span><span class="mi">2</span><span class="o">===</span><span class="mi">0</span><span class="p">},</span><span class="nx">odd</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="o">%</span><span class="mi">2</span><span class="o">===</span><span class="mi">1</span><span class="p">},</span><span class="nx">lt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">U</span><span class="o">&lt;</span><span class="nx">T</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="p">},</span><span class="nx">gt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">U</span><span class="o">&gt;</span><span class="nx">T</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="p">},</span><span class="nx">nth</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="o">==</span><span class="nx">U</span><span class="p">},</span><span class="nx">eq</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="mi">0</span><span class="o">==</span><span class="nx">U</span><span class="p">}},</span><span class="nx">filter</span><span class="o">:</span><span class="p">{</span><span class="nx">PSEUDO</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Z</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">W</span><span class="p">,</span><span class="nx">aa</span><span class="p">){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nx">V</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">X</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">filters</span><span class="p">[</span><span class="nx">U</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="k">return</span> <span class="nx">X</span><span class="p">(</span><span class="nx">Z</span><span class="p">,</span><span class="nx">W</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">aa</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="o">===</span><span class="s2">&quot;contains&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">textContent</span><span class="o">||</span><span class="nx">Z</span><span class="p">.</span><span class="nx">innerText</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">V</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="o">===</span><span class="s2">&quot;not&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="nx">V</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">W</span><span class="o">&lt;</span><span class="nx">T</span><span class="p">;</span><span class="nx">W</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">[</span><span class="nx">W</span><span class="p">]</span><span class="o">===</span><span class="nx">Z</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}</span><span class="k">return</span> <span class="kc">true</span><span class="p">}}}},</span><span class="nx">CHILD</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Z</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">U</span><span class="o">=</span><span class="nx">T</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">Z</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;only&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;first&quot;</span><span class="o">:</span><span class="k">while</span><span class="p">(</span><span class="nx">U</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="o">==</span><span class="s2">&quot;first&quot;</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="nx">U</span><span class="o">=</span><span class="nx">T</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;last&quot;</span><span class="o">:</span><span class="k">while</span><span class="p">(</span><span class="nx">U</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}}</span><span class="k">return</span> <span class="kc">true</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;nth&quot;</span><span class="o">:</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">ac</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">ac</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">ab</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ab</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">ab</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">!==</span><span class="nx">Y</span><span class="o">||!</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeIndex</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">U</span><span class="o">=</span><span class="nx">ab</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">U</span><span class="p">;</span><span class="nx">U</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeIndex</span><span class="o">=++</span><span class="nx">X</span><span class="p">}}</span><span class="nx">ab</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">=</span><span class="nx">Y</span><span class="p">}</span><span class="kd">var</span> <span class="nx">aa</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeIndex</span><span class="o">-</span><span class="nx">ac</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">aa</span><span class="o">==</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="p">(</span><span class="nx">aa</span><span class="o">%</span><span class="nx">V</span><span class="o">==</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">aa</span><span class="o">/</span><span class="nx">V</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">)}}},</span><span class="nx">ID</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)</span><span class="o">===</span><span class="nx">T</span><span class="p">},</span><span class="nx">TAG</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">T</span><span class="o">===</span><span class="s2">&quot;*&quot;</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="o">||</span><span class="nx">U</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">===</span><span class="nx">T</span><span class="p">},</span><span class="nx">CLASS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">className</span><span class="o">||</span><span class="nx">U</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">T</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">},</span><span class="nx">ATTR</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">T</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">attrHandle</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">attrHandle</span><span class="p">[</span><span class="nx">V</span><span class="p">](</span><span class="nx">Y</span><span class="p">)</span><span class="o">:</span><span class="nx">Y</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="o">?</span><span class="nx">Y</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">:</span><span class="nx">Y</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">V</span><span class="p">),</span><span class="nx">Z</span><span class="o">=</span><span class="nx">T</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">X</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">U</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="k">return</span> <span class="nx">T</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="nx">X</span><span class="o">===</span><span class="s2">&quot;!=&quot;</span><span class="o">:</span><span class="nx">X</span><span class="o">===</span><span class="s2">&quot;=&quot;</span><span class="o">?</span><span class="nx">Z</span><span class="o">===</span><span class="nx">U</span><span class="o">:</span><span class="nx">X</span><span class="o">===</span><span class="s2">&quot;*=&quot;</span><span class="o">?</span><span class="nx">Z</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">U</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">:</span><span class="nx">X</span><span class="o">===</span><span class="s2">&quot;~=&quot;</span><span class="o">?</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">Z</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">U</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">:!</span><span class="nx">U</span><span class="o">?</span><span class="nx">Z</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="o">!==</span><span class="kc">false</span><span class="o">:</span><span class="nx">X</span><span class="o">===</span><span class="s2">&quot;!=&quot;</span><span class="o">?</span><span class="nx">Z</span><span class="o">!=</span><span class="nx">U</span><span class="o">:</span><span class="nx">X</span><span class="o">===</span><span class="s2">&quot;^=&quot;</span><span class="o">?</span><span class="nx">Z</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">U</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="o">:</span><span class="nx">X</span><span class="o">===</span><span class="s2">&quot;$=&quot;</span><span class="o">?</span><span class="nx">Z</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">Z</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">U</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">===</span><span class="nx">U</span><span class="o">:</span><span class="nx">X</span><span class="o">===</span><span class="s2">&quot;|=&quot;</span><span class="o">?</span><span class="nx">Z</span><span class="o">===</span><span class="nx">U</span><span class="o">||</span><span class="nx">Z</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">U</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">===</span><span class="nx">U</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="kc">false</span><span class="p">},</span><span class="nx">POS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nx">U</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">W</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">setFilters</span><span class="p">[</span><span class="nx">T</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">){</span><span class="k">return</span> <span class="nx">W</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">Y</span><span class="p">)}}}};</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">POS</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">O</span> <span class="k">in</span> <span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">O</span><span class="p">]</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="nx">O</span><span class="p">].</span><span class="nx">source</span><span class="o">+</span><span class="sr">/(?![^\[]*\])(?![^\(]*\))/</span><span class="p">.</span><span class="nx">source</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="nx">U</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">U</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">U</span><span class="p">);</span><span class="k">return</span> <span class="nx">T</span><span class="p">}</span><span class="k">return</span> <span class="nx">U</span><span class="p">};</span><span class="k">try</span><span class="p">{</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">N</span><span class="p">){</span><span class="nx">E</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nx">W</span><span class="o">||</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">X</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">){</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">X</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">X</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">V</span><span class="o">&lt;</span><span class="nx">T</span><span class="p">;</span><span class="nx">V</span><span class="o">++</span><span class="p">){</span><span class="nx">U</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="nx">V</span><span class="p">])}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">X</span><span class="p">[</span><span class="nx">V</span><span class="p">];</span><span class="nx">V</span><span class="o">++</span><span class="p">){</span><span class="nx">U</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="nx">V</span><span class="p">])}}}</span><span class="k">return</span> <span class="nx">U</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">T</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">4</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="nx">U</span><span class="o">===</span><span class="nx">T</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="nx">hasDuplicate</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">return</span> <span class="nx">V</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;sourceIndex&quot;</span> <span class="k">in</span> <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">sourceIndex</span><span class="o">-</span><span class="nx">T</span><span class="p">.</span><span class="nx">sourceIndex</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="nx">hasDuplicate</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">return</span> <span class="nx">V</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createRange</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="nx">U</span><span class="p">){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">W</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createRange</span><span class="p">(),</span><span class="nx">T</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="nx">V</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">W</span><span class="p">);</span><span class="nx">V</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="nx">T</span><span class="p">.</span><span class="nx">selectNode</span><span class="p">(</span><span class="nx">U</span><span class="p">);</span><span class="nx">T</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">compareBoundaryPoints</span><span class="p">(</span><span class="nx">Range</span><span class="p">.</span><span class="nx">START_TO_END</span><span class="p">,</span><span class="nx">T</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="nx">hasDuplicate</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">return</span> <span class="nx">X</span><span class="p">}}}}(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;form&quot;</span><span class="p">),</span><span class="nx">V</span><span class="o">=</span><span class="s2">&quot;script&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">();</span><span class="nx">U</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;input name=&#39;&quot;</span><span class="o">+</span><span class="nx">V</span><span class="o">+</span><span class="s2">&quot;&#39;/&gt;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!!</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">V</span><span class="p">)){</span><span class="nx">I</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">ID</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">Z</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">getElementById</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">Z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">return</span> <span class="nx">W</span><span class="o">?</span><span class="nx">W</span><span class="p">.</span><span class="nx">id</span><span class="o">===</span><span class="nx">X</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">W</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">W</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">).</span><span class="nx">nodeValue</span><span class="o">===</span><span class="nx">X</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="p">[</span><span class="nx">W</span><span class="p">]</span><span class="o">:</span><span class="nx">g</span><span class="o">:</span><span class="p">[]}};</span><span class="nx">I</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">ID</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="p">.</span><span class="nx">getAttributeNode</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">X</span><span class="o">&amp;&amp;</span><span class="nx">X</span><span class="p">.</span><span class="nx">nodeValue</span><span class="o">===</span><span class="nx">W</span><span class="p">}}</span><span class="nx">T</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">U</span><span class="p">)})();(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">T</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createComment</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">TAG</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">U</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;*&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">X</span><span class="p">[</span><span class="nx">V</span><span class="p">];</span><span class="nx">V</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="nx">V</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">W</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">X</span><span class="p">[</span><span class="nx">V</span><span class="p">])}}</span><span class="nx">X</span><span class="o">=</span><span class="nx">W</span><span class="p">}</span><span class="k">return</span> <span class="nx">X</span><span class="p">}}</span><span class="nx">T</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;a href=&#39;#&#39;&gt;&lt;/a&gt;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">T</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;#&quot;</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">attrHandle</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">){</span><span class="k">return</span> <span class="nx">U</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="mi">2</span><span class="p">)}}})();</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">){(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nx">F</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">U</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;p class=&#39;TEST&#39;&gt;&lt;/p&gt;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;.TEST&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="nx">X</span><span class="o">=</span><span class="nx">X</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">W</span><span class="o">&amp;&amp;</span><span class="nx">X</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">9</span><span class="o">&amp;&amp;!</span><span class="nx">Q</span><span class="p">(</span><span class="nx">X</span><span class="p">)){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">E</span><span class="p">(</span><span class="nx">X</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">Y</span><span class="p">),</span><span class="nx">V</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">Z</span><span class="p">){}}</span><span class="k">return</span> <span class="nx">T</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">W</span><span class="p">)};</span><span class="nx">F</span><span class="p">.</span><span class="nx">find</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">find</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">filter</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">selectors</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">selectors</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">matches</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">matches</span><span class="p">})()}</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">){(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">T</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;div class=&#39;test e&#39;&gt;&lt;/div&gt;&lt;div class=&#39;test&#39;&gt;&lt;/div&gt;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="s2">&quot;e&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">T</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="s2">&quot;e&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="s2">&quot;e&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">I</span><span class="p">.</span><span class="nx">order</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;CLASS&quot;</span><span class="p">);</span><span class="nx">I</span><span class="p">.</span><span class="nx">find</span><span class="p">.</span><span class="nx">CLASS</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">V</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">W</span><span class="p">){</span><span class="k">return</span> <span class="nx">V</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="nx">U</span><span class="p">[</span><span class="mi">1</span><span class="p">])}}})()}</span><span class="kd">function</span> <span class="nx">P</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">Z</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">ad</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="nx">ac</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ab</span><span class="o">=</span><span class="nx">U</span><span class="o">==</span><span class="s2">&quot;previousSibling&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">ac</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="nx">ad</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">W</span><span class="o">&lt;</span><span class="nx">V</span><span class="p">;</span><span class="nx">W</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nx">ad</span><span class="p">[</span><span class="nx">W</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ab</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">=</span><span class="nx">Y</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizset</span><span class="o">=</span><span class="nx">W</span><span class="p">}</span><span class="nx">T</span><span class="o">=</span><span class="nx">T</span><span class="p">[</span><span class="nx">U</span><span class="p">];</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">===</span><span class="nx">Y</span><span class="p">){</span><span class="nx">X</span><span class="o">=</span><span class="nx">ad</span><span class="p">[</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizset</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="nx">ac</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">=</span><span class="nx">Y</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizset</span><span class="o">=</span><span class="nx">W</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">===</span><span class="nx">Z</span><span class="p">){</span><span class="nx">X</span><span class="o">=</span><span class="nx">T</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">T</span><span class="o">=</span><span class="nx">T</span><span class="p">[</span><span class="nx">U</span><span class="p">]}</span><span class="nx">ad</span><span class="p">[</span><span class="nx">W</span><span class="p">]</span><span class="o">=</span><span class="nx">X</span><span class="p">}}}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">Z</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">ad</span><span class="p">,</span><span class="nx">aa</span><span class="p">,</span><span class="nx">ac</span><span class="p">){</span><span class="kd">var</span> <span class="nx">ab</span><span class="o">=</span><span class="nx">U</span><span class="o">==</span><span class="s2">&quot;previousSibling&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">ac</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="nx">ad</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">W</span><span class="o">&lt;</span><span class="nx">V</span><span class="p">;</span><span class="nx">W</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nx">ad</span><span class="p">[</span><span class="nx">W</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">ab</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">=</span><span class="nx">Y</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizset</span><span class="o">=</span><span class="nx">W</span><span class="p">}</span><span class="nx">T</span><span class="o">=</span><span class="nx">T</span><span class="p">[</span><span class="nx">U</span><span class="p">];</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">===</span><span class="nx">Y</span><span class="p">){</span><span class="nx">X</span><span class="o">=</span><span class="nx">ad</span><span class="p">[</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizset</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ac</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizcache</span><span class="o">=</span><span class="nx">Y</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">sizset</span><span class="o">=</span><span class="nx">W</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">Z</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="o">===</span><span class="nx">Z</span><span class="p">){</span><span class="nx">X</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">Z</span><span class="p">,[</span><span class="nx">T</span><span class="p">]).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">X</span><span class="o">=</span><span class="nx">T</span><span class="p">;</span><span class="k">break</span><span class="p">}}}</span><span class="nx">T</span><span class="o">=</span><span class="nx">T</span><span class="p">[</span><span class="nx">U</span><span class="p">]}</span><span class="nx">ad</span><span class="p">[</span><span class="nx">W</span><span class="p">]</span><span class="o">=</span><span class="nx">X</span><span class="p">}}}</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">U</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">T</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">U</span><span class="o">!==</span><span class="nx">T</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">contains</span><span class="o">?</span><span class="nx">U</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">T</span><span class="p">)</span><span class="o">:</span><span class="kc">true</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">===</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">!==</span><span class="s2">&quot;HTML&quot;</span><span class="o">||!!</span><span class="nx">T</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">&amp;&amp;</span><span class="nx">Q</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">aa</span><span class="p">){</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="p">[],</span><span class="nx">X</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="nx">aa</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="p">[</span><span class="nx">aa</span><span class="p">]</span><span class="o">:</span><span class="nx">aa</span><span class="p">;</span><span class="k">while</span><span class="p">((</span><span class="nx">Y</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">PSEUDO</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">T</span><span class="p">))){</span><span class="nx">X</span><span class="o">+=</span><span class="nx">Y</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">T</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">match</span><span class="p">.</span><span class="nx">PSEUDO</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="nx">T</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">relative</span><span class="p">[</span><span class="nx">T</span><span class="p">]</span><span class="o">?</span><span class="nx">T</span><span class="o">+</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="nx">T</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">Z</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">Z</span><span class="o">&lt;</span><span class="nx">U</span><span class="p">;</span><span class="nx">Z</span><span class="o">++</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">V</span><span class="p">[</span><span class="nx">Z</span><span class="p">],</span><span class="nx">W</span><span class="p">)}</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">W</span><span class="p">)};</span><span class="nx">o</span><span class="p">.</span><span class="nx">find</span><span class="o">=</span><span class="nx">F</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">filter</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">expr</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">selectors</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">expr</span><span class="p">[</span><span class="s2">&quot;:&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">expr</span><span class="p">.</span><span class="nx">filters</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">selectors</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">hidden</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">T</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">===</span><span class="mi">0</span><span class="p">};</span><span class="nx">F</span><span class="p">.</span><span class="nx">selectors</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">visible</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">T</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">};</span><span class="nx">F</span><span class="p">.</span><span class="nx">selectors</span><span class="p">.</span><span class="nx">filters</span><span class="p">.</span><span class="nx">animated</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">grep</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">timers</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">U</span><span class="p">){</span><span class="k">return</span> <span class="nx">T</span><span class="o">===</span><span class="nx">U</span><span class="p">.</span><span class="nx">elem</span><span class="p">}).</span><span class="nx">length</span><span class="p">};</span><span class="nx">o</span><span class="p">.</span><span class="nx">multiFilter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">U</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">){</span><span class="nx">V</span><span class="o">=</span><span class="s2">&quot;:not(&quot;</span><span class="o">+</span><span class="nx">V</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">}</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">matches</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">T</span><span class="p">)};</span><span class="nx">o</span><span class="p">.</span><span class="nx">dir</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="p">[],</span><span class="nx">W</span><span class="o">=</span><span class="nx">V</span><span class="p">[</span><span class="nx">U</span><span class="p">];</span><span class="k">while</span><span class="p">(</span><span class="nx">W</span><span class="o">&amp;&amp;</span><span class="nx">W</span><span class="o">!=</span><span class="nb">document</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">W</span><span class="p">)}</span><span class="nx">W</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="nx">U</span><span class="p">]}</span><span class="k">return</span> <span class="nx">T</span><span class="p">};</span><span class="nx">o</span><span class="p">.</span><span class="nx">nth</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">W</span><span class="p">){</span><span class="nx">T</span><span class="o">=</span><span class="nx">T</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">X</span><span class="p">;</span><span class="nx">X</span><span class="o">=</span><span class="nx">X</span><span class="p">[</span><span class="nx">V</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;++</span><span class="nx">U</span><span class="o">==</span><span class="nx">T</span><span class="p">){</span><span class="k">break</span><span class="p">}}</span><span class="k">return</span> <span class="nx">X</span><span class="p">};</span><span class="nx">o</span><span class="p">.</span><span class="nx">sibling</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">U</span><span class="p">){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(;</span><span class="nx">V</span><span class="p">;</span><span class="nx">V</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">V</span><span class="o">!=</span><span class="nx">U</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">V</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">T</span><span class="p">};</span><span class="k">return</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">Sizzle</span><span class="o">=</span><span class="nx">F</span><span class="p">})();</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="o">=</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">3</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">8</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">setInterval</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="o">!=</span><span class="nx">l</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="nx">l</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">.</span><span class="nx">guid</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">guid</span><span class="o">++</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="o">!==</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">H</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">K</span><span class="p">}</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">,{}),</span><span class="nx">J</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="s2">&quot;handle&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="s2">&quot;handle&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">o</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">triggered</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">handle</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">});</span><span class="nx">J</span><span class="p">.</span><span class="nx">elem</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">){</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">N</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">H</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">slice</span><span class="p">().</span><span class="nx">sort</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">N</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">specialAll</span><span class="p">[</span><span class="nx">N</span><span class="p">]){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">specialAll</span><span class="p">[</span><span class="nx">N</span><span class="p">].</span><span class="nx">setup</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">O</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">L</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">N</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">N</span><span class="p">]</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">N</span><span class="p">].</span><span class="nx">setup</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">O</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="kc">false</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">N</span><span class="p">,</span><span class="nx">J</span><span class="p">)}}}}</span><span class="nx">L</span><span class="p">[</span><span class="nx">H</span><span class="p">.</span><span class="nx">guid</span><span class="p">]</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">global</span><span class="p">[</span><span class="nx">N</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">});</span><span class="nx">I</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">guid</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">global</span><span class="o">:</span><span class="p">{},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">J</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">3</span><span class="o">||</span><span class="nx">K</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">8</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">),</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">===</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">H</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;.&quot;</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">I</span> <span class="k">in</span> <span class="nx">G</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">I</span><span class="o">+</span><span class="p">(</span><span class="nx">H</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">))}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="nx">J</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">handler</span><span class="p">;</span><span class="nx">H</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">type</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">O</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">O</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\.)&quot;</span><span class="o">+</span><span class="nx">Q</span><span class="p">.</span><span class="nx">slice</span><span class="p">().</span><span class="nx">sort</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.*\\.&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(\\.|$)&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">O</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="k">delete</span> <span class="nx">G</span><span class="p">[</span><span class="nx">O</span><span class="p">][</span><span class="nx">J</span><span class="p">.</span><span class="nx">guid</span><span class="p">]}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">P</span> <span class="k">in</span> <span class="nx">G</span><span class="p">[</span><span class="nx">O</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">O</span><span class="p">][</span><span class="nx">P</span><span class="p">].</span><span class="nx">type</span><span class="p">)){</span><span class="k">delete</span> <span class="nx">G</span><span class="p">[</span><span class="nx">O</span><span class="p">][</span><span class="nx">P</span><span class="p">]}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">specialAll</span><span class="p">[</span><span class="nx">O</span><span class="p">]){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">specialAll</span><span class="p">[</span><span class="nx">O</span><span class="p">].</span><span class="nx">teardown</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">Q</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">F</span> <span class="k">in</span> <span class="nx">G</span><span class="p">[</span><span class="nx">O</span><span class="p">]){</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">O</span><span class="p">]</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">O</span><span class="p">].</span><span class="nx">teardown</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">Q</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="s2">&quot;handle&quot;</span><span class="p">),</span><span class="kc">false</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">O</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="s2">&quot;handle&quot;</span><span class="p">))}}}</span><span class="nx">F</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">delete</span> <span class="nx">G</span><span class="p">[</span><span class="nx">O</span><span class="p">]}}})}</span><span class="k">for</span><span class="p">(</span><span class="nx">F</span> <span class="k">in</span> <span class="nx">G</span><span class="p">){</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="s2">&quot;handle&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">elem</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">removeData</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="s2">&quot;handle&quot;</span><span class="p">)}}},</span><span class="nx">trigger</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">I</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">?</span><span class="nx">I</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">?</span><span class="nx">I</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">G</span><span class="p">),</span><span class="nx">I</span><span class="p">)</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;!&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="nx">I</span><span class="p">.</span><span class="nx">exclusive</span><span class="o">=</span><span class="kc">true</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">global</span><span class="p">[</span><span class="nx">G</span><span class="p">]){</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">G</span><span class="p">]){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">handle</span><span class="p">.</span><span class="nx">elem</span><span class="p">)}})}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="o">||</span><span class="nx">H</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">3</span><span class="o">||</span><span class="nx">H</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">8</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="nx">I</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">I</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">K</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="nx">K</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">I</span><span class="p">)}</span><span class="nx">I</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="s2">&quot;handle&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">K</span><span class="p">)}</span><span class="k">if</span><span class="p">((</span><span class="o">!</span><span class="nx">H</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="s2">&quot;a&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;click&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">K</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">I</span><span class="p">.</span><span class="nx">isDefaultPrevented</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="s2">&quot;a&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;click&quot;</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">H</span><span class="p">[</span><span class="nx">G</span><span class="p">]()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">L</span><span class="p">){}}</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">.</span><span class="nx">isPropagationStopped</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">||</span><span class="nx">H</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="kc">true</span><span class="p">)}}},</span><span class="nx">handle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="p">,</span><span class="nx">E</span><span class="p">;</span><span class="nx">K</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">fix</span><span class="p">(</span><span class="nx">K</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">event</span><span class="p">);</span><span class="nx">K</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">K</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">J</span><span class="o">=!</span><span class="nx">L</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">K</span><span class="p">.</span><span class="nx">exclusive</span><span class="p">;</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\.)&quot;</span><span class="o">+</span><span class="nx">L</span><span class="p">.</span><span class="nx">slice</span><span class="p">().</span><span class="nx">sort</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.*\\.&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;(\\.|$)&quot;</span><span class="p">);</span><span class="nx">E</span><span class="o">=</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">{})[</span><span class="nx">K</span><span class="p">.</span><span class="nx">type</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span> <span class="k">in</span> <span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">G</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">type</span><span class="p">)){</span><span class="nx">K</span><span class="p">.</span><span class="nx">handler</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">K</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">!==</span><span class="nx">g</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="nx">F</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">K</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()}}</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="p">()){</span><span class="k">break</span><span class="p">}}}},</span><span class="nx">props</span><span class="o">:</span><span class="s2">&quot;altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode metaKey newValue originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">fix</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">[</span><span class="nx">h</span><span class="p">]){</span><span class="k">return</span> <span class="nx">H</span><span class="p">}</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">H</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">F</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">J</span><span class="p">;</span><span class="nx">G</span><span class="p">;){</span><span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">[</span><span class="o">--</span><span class="nx">G</span><span class="p">];</span><span class="nx">H</span><span class="p">[</span><span class="nx">J</span><span class="p">]</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="nx">J</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">.</span><span class="nx">target</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">srcElement</span><span class="o">||</span><span class="nb">document</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">3</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">fromElement</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">fromElement</span><span class="o">==</span><span class="nx">H</span><span class="p">.</span><span class="nx">target</span><span class="o">?</span><span class="nx">H</span><span class="p">.</span><span class="nx">toElement</span><span class="o">:</span><span class="nx">H</span><span class="p">.</span><span class="nx">fromElement</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">pageX</span><span class="o">==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">clientX</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">pageX</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">clientX</span><span class="o">+</span><span class="p">(</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">pageY</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">clientY</span><span class="o">+</span><span class="p">(</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">H</span><span class="p">.</span><span class="nx">charCode</span><span class="o">||</span><span class="nx">H</span><span class="p">.</span><span class="nx">charCode</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">H</span><span class="p">.</span><span class="nx">charCode</span><span class="o">:</span><span class="nx">H</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">)){</span><span class="nx">H</span><span class="p">.</span><span class="nx">which</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">charCode</span><span class="o">||</span><span class="nx">H</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">button</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">which</span><span class="o">=</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">button</span><span class="o">&amp;</span><span class="mi">1</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">button</span><span class="o">&amp;</span><span class="mi">2</span><span class="o">?</span><span class="mi">3</span><span class="o">:</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">button</span><span class="o">&amp;</span><span class="mi">4</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="mi">0</span><span class="p">)))}</span><span class="k">return</span> <span class="nx">H</span><span class="p">},</span><span class="nx">proxy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="nx">E</span><span class="o">=</span><span class="nx">E</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">E</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">guid</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">guid</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">guid</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">guid</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">E</span><span class="p">},</span><span class="nx">special</span><span class="o">:</span><span class="p">{</span><span class="nx">ready</span><span class="o">:</span><span class="p">{</span><span class="nx">setup</span><span class="o">:</span><span class="nx">B</span><span class="p">,</span><span class="nx">teardown</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}}},</span><span class="nx">specialAll</span><span class="o">:</span><span class="p">{</span><span class="nx">live</span><span class="o">:</span><span class="p">{</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">)},</span><span class="nx">teardown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\.)&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;(\\.|$)&quot;</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">((</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">).</span><span class="nx">live</span><span class="o">||</span><span class="p">{}),</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">)){</span><span class="nx">E</span><span class="o">++</span><span class="p">}});</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">G</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">)}}}}}};</span><span class="nx">o</span><span class="p">.</span><span class="nx">Event</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">o</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">E</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">type</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">E</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="k">this</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">};</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(){</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">Event</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">preventDefault</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isDefaultPrevented</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()}</span><span class="nx">E</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=</span><span class="kc">false</span><span class="p">},</span><span class="nx">stopPropagation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isPropagationStopped</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()}</span><span class="nx">E</span><span class="p">.</span><span class="nx">cancelBubble</span><span class="o">=</span><span class="kc">true</span><span class="p">},</span><span class="nx">stopImmediatePropagation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isImmediatePropagationStopped</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()},</span><span class="nx">isDefaultPrevented</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">isPropagationStopped</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">isImmediatePropagationStopped</span><span class="o">:</span><span class="nx">k</span><span class="p">};</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="o">!=</span><span class="k">this</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">E</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">!=</span><span class="k">this</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">handle</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}};</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">mouseover</span><span class="o">:</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="nx">mouseout</span><span class="o">:</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">special</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">E</span><span class="p">)},</span><span class="nx">teardown</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">a</span><span class="p">)}}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">bind</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="o">==</span><span class="s2">&quot;unload&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">one</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="o">||</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">)})},</span><span class="nx">one</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">F</span><span class="o">||</span><span class="nx">H</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="k">return</span><span class="p">(</span><span class="nx">F</span><span class="o">||</span><span class="nx">H</span><span class="p">).</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">)})},</span><span class="nx">unbind</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">)})},</span><span class="nx">trigger</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="k">this</span><span class="p">)})},</span><span class="nx">triggerHandler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">E</span><span class="p">);</span><span class="nx">F</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">F</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">result</span><span class="p">}},</span><span class="nx">toggle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">F</span><span class="o">&lt;</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="o">++</span><span class="p">])}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">lastToggle</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lastToggle</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">%</span><span class="nx">F</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">return</span> <span class="nx">E</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">lastToggle</span><span class="o">++</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)</span><span class="o">||</span><span class="kc">false</span><span class="p">}))},</span><span class="nx">hover</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">mouseenter</span><span class="p">(</span><span class="nx">E</span><span class="p">).</span><span class="nx">mouseleave</span><span class="p">(</span><span class="nx">F</span><span class="p">)},</span><span class="nx">ready</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">B</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isReady</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="nx">o</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">o</span><span class="p">.</span><span class="nx">readyList</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">E</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">live</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">F</span><span class="p">);</span><span class="nx">E</span><span class="p">.</span><span class="nx">guid</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">+</span><span class="nx">G</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">die</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="p">),</span><span class="nx">E</span><span class="o">?</span><span class="p">{</span><span class="nx">guid</span><span class="o">:</span><span class="nx">E</span><span class="p">.</span><span class="nx">guid</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">selector</span><span class="o">+</span><span class="nx">F</span><span class="p">}</span><span class="o">:</span><span class="kc">null</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}});</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(^|\\.)&quot;</span><span class="o">+</span><span class="nx">H</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;(\\.|$)&quot;</span><span class="p">),</span><span class="nx">G</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="p">[];</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;events&quot;</span><span class="p">).</span><span class="nx">live</span><span class="o">||</span><span class="p">[],</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">type</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">data</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">elem</span><span class="o">:</span><span class="nx">K</span><span class="p">,</span><span class="nx">fn</span><span class="o">:</span><span class="nx">J</span><span class="p">})}}});</span><span class="nx">F</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="s2">&quot;closest&quot;</span><span class="p">)</span><span class="o">-</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="s2">&quot;closest&quot;</span><span class="p">)});</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">)}});</span><span class="k">return</span> <span class="nx">G</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;live&quot;</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\./g</span><span class="p">,</span><span class="s2">&quot;`&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/ /g</span><span class="p">,</span><span class="s2">&quot;|&quot;</span><span class="p">)].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)}</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">isReady</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">readyList</span><span class="o">:</span><span class="p">[],</span><span class="nx">ready</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="p">.</span><span class="nx">isReady</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">isReady</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">readyList</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">readyList</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="nx">o</span><span class="p">)});</span><span class="nx">o</span><span class="p">.</span><span class="nx">readyList</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">o</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">triggerHandler</span><span class="p">(</span><span class="s2">&quot;ready&quot;</span><span class="p">)}}});</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">x</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">){</span><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nb">document</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="kc">false</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">ready</span><span class="p">()},</span><span class="kc">false</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">){</span><span class="nb">document</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="s2">&quot;complete&quot;</span><span class="p">){</span><span class="nb">document</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">ready</span><span class="p">()}});</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">doScroll</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">==</span><span class="nx">l</span><span class="p">.</span><span class="nx">top</span><span class="p">){(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isReady</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="k">try</span><span class="p">{</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">ready</span><span class="p">()})()}}}</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">ready</span><span class="p">)}</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">((</span><span class="s2">&quot;blur,focus,load,resize,scroll,unload,click,dblclick,mousedown,mouseup,mousemove,mouseover,mouseout,mouseenter,mouseleave,change,select,submit,keydown,keypress,keyup,error&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">G</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">E</span><span class="p">)}});</span><span class="nx">o</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;unload&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">E</span> <span class="k">in</span> <span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">!=</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">E</span><span class="p">].</span><span class="nx">handle</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">E</span><span class="p">].</span><span class="nx">handle</span><span class="p">.</span><span class="nx">elem</span><span class="p">)}}});(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">),</span><span class="nx">K</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">J</span><span class="o">=</span><span class="s2">&quot;script&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">();</span><span class="nx">K</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="nx">K</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s1">&#39;   &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href=&quot;/a&quot; style=&quot;color:red;float:left;opacity:.5;&quot;&gt;a&lt;/a&gt;&lt;select&gt;&lt;option&gt;text&lt;/option&gt;&lt;/select&gt;&lt;object&gt;&lt;param/&gt;&lt;/object&gt;&#39;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">H</span><span class="o">||!</span><span class="nx">H</span><span class="p">.</span><span class="nx">length</span><span class="o">||!</span><span class="nx">E</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="o">=</span><span class="p">{</span><span class="nx">leadingWhitespace</span><span class="o">:</span><span class="nx">K</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">3</span><span class="p">,</span><span class="nx">tbody</span><span class="o">:!</span><span class="nx">K</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;tbody&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span><span class="nx">objectAll</span><span class="o">:!!</span><span class="nx">K</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span><span class="nx">htmlSerialize</span><span class="o">:!!</span><span class="nx">K</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;link&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="sr">/red/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">)),</span><span class="nx">hrefNormalized</span><span class="o">:</span><span class="nx">E</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;/a&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">E</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">opacity</span><span class="o">===</span><span class="s2">&quot;0.5&quot;</span><span class="p">,</span><span class="nx">cssFloat</span><span class="o">:!!</span><span class="nx">E</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssFloat</span><span class="p">,</span><span class="nx">scriptEval</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">noCloneEvent</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">boxModel</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">G</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">G</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;window.&quot;</span><span class="o">+</span><span class="nx">J</span><span class="o">+</span><span class="s2">&quot;=1;&quot;</span><span class="p">))}</span><span class="k">catch</span><span class="p">(</span><span class="nx">I</span><span class="p">){}</span><span class="nx">F</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">J</span><span class="p">]){</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">scriptEval</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">delete</span> <span class="nx">l</span><span class="p">[</span><span class="nx">J</span><span class="p">]}</span><span class="nx">F</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onclick&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">noCloneEvent</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">K</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onclick&quot;</span><span class="p">,</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">)});</span><span class="nx">K</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">).</span><span class="nx">fireEvent</span><span class="p">(</span><span class="s2">&quot;onclick&quot;</span><span class="p">)}</span><span class="nx">o</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">L</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">paddingLeft</span><span class="o">=</span><span class="s2">&quot;1px&quot;</span><span class="p">;</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">L</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">===</span><span class="mi">2</span><span class="p">;</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">L</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">})})();</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">support</span><span class="p">.</span><span class="nx">cssFloat</span><span class="o">?</span><span class="s2">&quot;cssFloat&quot;</span><span class="o">:</span><span class="s2">&quot;styleFloat&quot;</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">props</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;for&quot;</span><span class="o">:</span><span class="s2">&quot;htmlFor&quot;</span><span class="p">,</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="s2">&quot;className&quot;</span><span class="p">,</span><span class="s2">&quot;float&quot;</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">cssFloat</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">styleFloat</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">readonly</span><span class="o">:</span><span class="s2">&quot;readOnly&quot;</span><span class="p">,</span><span class="nx">maxlength</span><span class="o">:</span><span class="s2">&quot;maxLength&quot;</span><span class="p">,</span><span class="nx">cellspacing</span><span class="o">:</span><span class="s2">&quot;cellSpacing&quot;</span><span class="p">,</span><span class="nx">rowspan</span><span class="o">:</span><span class="s2">&quot;rowSpan&quot;</span><span class="p">,</span><span class="nx">tabindex</span><span class="o">:</span><span class="s2">&quot;tabIndex&quot;</span><span class="p">};</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">_load</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">load</span><span class="p">,</span><span class="nx">load</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">G</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_load</span><span class="p">(</span><span class="nx">G</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="s2">&quot;GET&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">J</span><span class="p">)){</span><span class="nx">K</span><span class="o">=</span><span class="nx">J</span><span class="p">;</span><span class="nx">J</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">J</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">){</span><span class="nx">J</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">param</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span><span class="nx">H</span><span class="o">=</span><span class="s2">&quot;POST&quot;</span><span class="p">}}}</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">url</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;html&quot;</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">J</span><span class="p">,</span><span class="nx">complete</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="o">==</span><span class="s2">&quot;success&quot;</span><span class="o">||</span><span class="nx">L</span><span class="o">==</span><span class="s2">&quot;notmodified&quot;</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">E</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;&lt;div/&gt;&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">responseText</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;script(.|\s)*?\/script&gt;/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)).</span><span class="nx">find</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">:</span><span class="nx">M</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">K</span><span class="p">,[</span><span class="nx">M</span><span class="p">.</span><span class="nx">responseText</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">])}}});</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">serialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">param</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">serializeArray</span><span class="p">())},</span><span class="nx">serializeArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">makeArray</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">}).</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">disabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">checked</span><span class="o">||</span><span class="sr">/select|textarea/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)</span><span class="o">||</span><span class="sr">/text|hidden|password|search/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">))}).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">val</span><span class="p">();</span><span class="k">return</span> <span class="nx">G</span><span class="o">==</span><span class="kc">null</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">G</span><span class="p">)</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">F</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">I</span><span class="p">}})</span><span class="o">:</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">F</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">G</span><span class="p">}}).</span><span class="nx">get</span><span class="p">()}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="s2">&quot;ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">)}});</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">G</span><span class="p">)){</span><span class="nx">H</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="nx">G</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">success</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="nx">F</span><span class="p">})},</span><span class="nx">getScript</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="s2">&quot;script&quot;</span><span class="p">)},</span><span class="nx">getJSON</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="s2">&quot;json&quot;</span><span class="p">)},</span><span class="nx">post</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">G</span><span class="p">)){</span><span class="nx">H</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="nx">G</span><span class="o">=</span><span class="p">{}}</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;POST&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">success</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">dataType</span><span class="o">:</span><span class="nx">F</span><span class="p">})},</span><span class="nx">ajaxSetup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">,</span><span class="nx">E</span><span class="p">)},</span><span class="nx">ajaxSettings</span><span class="o">:</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span><span class="nx">global</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">contentType</span><span class="o">:</span><span class="s2">&quot;application/x-www-form-urlencoded&quot;</span><span class="p">,</span><span class="nx">processData</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">async</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">xhr</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">ActiveXObject</span><span class="o">?</span><span class="k">new</span> <span class="nx">ActiveXObject</span><span class="p">(</span><span class="s2">&quot;Microsoft.XMLHTTP&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">()},</span><span class="nx">accepts</span><span class="o">:</span><span class="p">{</span><span class="nx">xml</span><span class="o">:</span><span class="s2">&quot;application/xml, text/xml&quot;</span><span class="p">,</span><span class="nx">html</span><span class="o">:</span><span class="s2">&quot;text/html&quot;</span><span class="p">,</span><span class="nx">script</span><span class="o">:</span><span class="s2">&quot;text/javascript, application/javascript&quot;</span><span class="p">,</span><span class="nx">json</span><span class="o">:</span><span class="s2">&quot;application/json, text/javascript&quot;</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="s2">&quot;text/plain&quot;</span><span class="p">,</span><span class="nx">_default</span><span class="o">:</span><span class="s2">&quot;*/*&quot;</span><span class="p">}},</span><span class="nx">lastModified</span><span class="o">:</span><span class="p">{},</span><span class="nx">ajax</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">){</span><span class="nx">M</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="kc">true</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="kc">true</span><span class="p">,{},</span><span class="nx">o</span><span class="p">.</span><span class="nx">ajaxSettings</span><span class="p">,</span><span class="nx">M</span><span class="p">));</span><span class="kd">var</span> <span class="nx">W</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="sr">/=\?(&amp;|$)/g</span><span class="p">,</span><span class="nx">R</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">.</span><span class="nx">processData</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">param</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="o">==</span><span class="s2">&quot;jsonp&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;GET&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">F</span><span class="p">)){</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="o">+=</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\?/</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">jsonp</span><span class="o">||</span><span class="s2">&quot;callback&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;=?&quot;</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">||!</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">F</span><span class="p">)){</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">?</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">+</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">jsonp</span><span class="o">||</span><span class="s2">&quot;callback&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;=?&quot;</span><span class="p">}}</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="o">=</span><span class="s2">&quot;json&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="o">==</span><span class="s2">&quot;json&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">F</span><span class="p">)</span><span class="o">||</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">F</span><span class="p">))){</span><span class="nx">W</span><span class="o">=</span><span class="s2">&quot;jsonp&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">W</span><span class="o">+</span><span class="s2">&quot;$1&quot;</span><span class="p">)}</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nx">W</span><span class="o">+</span><span class="s2">&quot;$1&quot;</span><span class="p">);</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="o">=</span><span class="s2">&quot;script&quot;</span><span class="p">;</span><span class="nx">l</span><span class="p">[</span><span class="nx">W</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="nx">V</span><span class="o">=</span><span class="nx">X</span><span class="p">;</span><span class="nx">I</span><span class="p">();</span><span class="nx">L</span><span class="p">();</span><span class="nx">l</span><span class="p">[</span><span class="nx">W</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">delete</span> <span class="nx">l</span><span class="p">[</span><span class="nx">W</span><span class="p">]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">Y</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">T</span><span class="p">)}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="o">==</span><span class="s2">&quot;script&quot;</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">.</span><span class="nx">cache</span><span class="o">==</span><span class="kc">null</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">cache</span><span class="o">===</span><span class="kc">false</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;GET&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="kd">var</span> <span class="nx">U</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\?|&amp;)_=.*?(&amp;|$)/</span><span class="p">,</span><span class="s2">&quot;$1_=&quot;</span><span class="o">+</span><span class="nx">E</span><span class="o">+</span><span class="s2">&quot;$2&quot;</span><span class="p">);</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">U</span><span class="o">+</span><span class="p">((</span><span class="nx">U</span><span class="o">==</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\?/</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;_=&quot;</span><span class="o">+</span><span class="nx">E</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;GET&quot;</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="o">+=</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\?/</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">active</span><span class="o">++</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxStart&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=</span><span class="sr">/^(\w+:)?\/\/([^\/?#]+)/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="o">==</span><span class="s2">&quot;script&quot;</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">==</span><span class="s2">&quot;GET&quot;</span><span class="o">&amp;&amp;</span><span class="nx">Q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!=</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">||</span><span class="nx">Q</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">!=</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span><span class="nx">T</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">scriptCharset</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">charset</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">scriptCharset</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">W</span><span class="p">){</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">T</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">O</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;loaded&quot;</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;complete&quot;</span><span class="p">)){</span><span class="nx">O</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">I</span><span class="p">();</span><span class="nx">L</span><span class="p">();</span><span class="nx">T</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">T</span><span class="p">)}}}</span><span class="nx">H</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">T</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">xhr</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">username</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">async</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">username</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">password</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">J</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">async</span><span class="p">)}</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;Content-Type&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">contentType</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">ifModified</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;If-Modified-Since&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">lastModified</span><span class="p">[</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;Thu, 01 Jan 1970 00:00:00 GMT&quot;</span><span class="p">)}</span><span class="nx">J</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;X-Requested-With&quot;</span><span class="p">,</span><span class="s2">&quot;XMLHttpRequest&quot;</span><span class="p">);</span><span class="nx">J</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;Accept&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">.</span><span class="nx">accepts</span><span class="p">[</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="p">]</span><span class="o">?</span><span class="nx">M</span><span class="p">.</span><span class="nx">accepts</span><span class="p">[</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;, */*&quot;</span><span class="o">:</span><span class="nx">M</span><span class="p">.</span><span class="nx">accepts</span><span class="p">.</span><span class="nx">_default</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">S</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">beforeSend</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">.</span><span class="nx">beforeSend</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="p">)</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;!--</span><span class="nx">o</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxStop&quot;</span><span class="p">)}</span><span class="nx">J</span><span class="p">.</span><span class="nx">abort</span><span class="p">();</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">global</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxSend&quot;</span><span class="p">,[</span><span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="p">])}</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="p">){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">P</span><span class="p">);</span><span class="nx">P</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;!--</span><span class="nx">o</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxStop&quot;</span><span class="p">)}}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="mi">4</span><span class="o">||</span><span class="nx">X</span><span class="o">==</span><span class="s2">&quot;timeout&quot;</span><span class="p">)){</span><span class="nx">K</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="p">){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">P</span><span class="p">);</span><span class="nx">P</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">R</span><span class="o">=</span><span class="nx">X</span><span class="o">==</span><span class="s2">&quot;timeout&quot;</span><span class="o">?</span><span class="s2">&quot;timeout&quot;</span><span class="o">:!</span><span class="nx">o</span><span class="p">.</span><span class="nx">httpSuccess</span><span class="p">(</span><span class="nx">J</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;error&quot;</span><span class="o">:</span><span class="nx">M</span><span class="p">.</span><span class="nx">ifModified</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">httpNotModified</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;notmodified&quot;</span><span class="o">:</span><span class="s2">&quot;success&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">R</span><span class="o">==</span><span class="s2">&quot;success&quot;</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">V</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">httpData</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="p">.</span><span class="nx">dataType</span><span class="p">,</span><span class="nx">M</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">Z</span><span class="p">){</span><span class="nx">R</span><span class="o">=</span><span class="s2">&quot;parsererror&quot;</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">R</span><span class="o">==</span><span class="s2">&quot;success&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">Y</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">getResponseHeader</span><span class="p">(</span><span class="s2">&quot;Last-Modified&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">Z</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">ifModified</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">lastModified</span><span class="p">[</span><span class="nx">M</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">=</span><span class="nx">Y</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">W</span><span class="p">){</span><span class="nx">I</span><span class="p">()}}</span><span class="k">else</span><span class="p">{</span><span class="nx">o</span><span class="p">.</span><span class="nx">handleError</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">R</span><span class="p">)}</span><span class="nx">L</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">abort</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">async</span><span class="p">){</span><span class="nx">J</span><span class="o">=</span><span class="kc">null</span><span class="p">}}}};</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">async</span><span class="p">){</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="mi">13</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">timeout</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="o">&amp;&amp;!</span><span class="nx">K</span><span class="p">){</span><span class="nx">N</span><span class="p">(</span><span class="s2">&quot;timeout&quot;</span><span class="p">)}},</span><span class="nx">M</span><span class="p">.</span><span class="nx">timeout</span><span class="p">)}}</span><span class="k">try</span><span class="p">{</span><span class="nx">J</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">data</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">S</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">handleError</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">S</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="p">.</span><span class="nx">async</span><span class="p">){</span><span class="nx">N</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">success</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">success</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nx">R</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">global</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxSuccess&quot;</span><span class="p">,[</span><span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="p">])}}</span><span class="kd">function</span> <span class="nx">L</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">complete</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">complete</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">R</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">global</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxComplete&quot;</span><span class="p">,[</span><span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="p">])}</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">global</span><span class="o">&amp;&amp;!--</span><span class="nx">o</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxStop&quot;</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">J</span><span class="p">},</span><span class="nx">handleError</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">error</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">global</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ajaxError&quot;</span><span class="p">,[</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">])}},</span><span class="nx">active</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">httpSuccess</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="o">!</span><span class="nx">F</span><span class="p">.</span><span class="nx">status</span><span class="o">&amp;&amp;</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">==</span><span class="s2">&quot;file:&quot;</span><span class="o">||</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">status</span><span class="o">&gt;=</span><span class="mi">200</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">.</span><span class="nx">status</span><span class="o">&lt;</span><span class="mi">300</span><span class="p">)</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">status</span><span class="o">==</span><span class="mi">304</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">status</span><span class="o">==</span><span class="mi">1223</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">E</span><span class="p">){}</span><span class="k">return</span> <span class="kc">false</span><span class="p">},</span><span class="nx">httpNotModified</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">getResponseHeader</span><span class="p">(</span><span class="s2">&quot;Last-Modified&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">G</span><span class="p">.</span><span class="nx">status</span><span class="o">==</span><span class="mi">304</span><span class="o">||</span><span class="nx">H</span><span class="o">==</span><span class="nx">o</span><span class="p">.</span><span class="nx">lastModified</span><span class="p">[</span><span class="nx">E</span><span class="p">]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">F</span><span class="p">){}</span><span class="k">return</span> <span class="kc">false</span><span class="p">},</span><span class="nx">httpData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">getResponseHeader</span><span class="p">(</span><span class="s2">&quot;content-type&quot;</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="nx">H</span><span class="o">==</span><span class="s2">&quot;xml&quot;</span><span class="o">||!</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;xml&quot;</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">E</span><span class="o">?</span><span class="nx">J</span><span class="p">.</span><span class="nx">responseXML</span><span class="o">:</span><span class="nx">J</span><span class="p">.</span><span class="nx">responseText</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">tagName</span><span class="o">==</span><span class="s2">&quot;parsererror&quot;</span><span class="p">){</span><span class="k">throw</span><span class="s2">&quot;parsererror&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">.</span><span class="nx">dataFilter</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">dataFilter</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">H</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">==</span><span class="s2">&quot;script&quot;</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">globalEval</span><span class="p">(</span><span class="nx">I</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">==</span><span class="s2">&quot;json&quot;</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="s2">&quot;eval&quot;</span><span class="p">](</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">I</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">I</span><span class="p">},</span><span class="nx">param</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="p">[];</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">){</span><span class="nx">G</span><span class="p">[</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">J</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">jquery</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">)})}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">F</span> <span class="k">in</span> <span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">])){</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">],</span><span class="kd">function</span><span class="p">(){</span><span class="nx">H</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="k">this</span><span class="p">)})}</span><span class="k">else</span><span class="p">{</span><span class="nx">H</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">])</span><span class="o">?</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">]()</span><span class="o">:</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">])}}}</span><span class="k">return</span> <span class="nx">G</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/%20/g</span><span class="p">,</span><span class="s2">&quot;+&quot;</span><span class="p">)}});</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[[</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="s2">&quot;marginTop&quot;</span><span class="p">,</span><span class="s2">&quot;marginBottom&quot;</span><span class="p">,</span><span class="s2">&quot;paddingTop&quot;</span><span class="p">,</span><span class="s2">&quot;paddingBottom&quot;</span><span class="p">],[</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="s2">&quot;marginLeft&quot;</span><span class="p">,</span><span class="s2">&quot;marginRight&quot;</span><span class="p">,</span><span class="s2">&quot;paddingLeft&quot;</span><span class="p">,</span><span class="s2">&quot;paddingRight&quot;</span><span class="p">],[</span><span class="s2">&quot;opacity&quot;</span><span class="p">]];</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="p">{};</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">.</span><span class="nx">apply</span><span class="p">([],</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">E</span><span class="p">)),</span><span class="kd">function</span><span class="p">(){</span><span class="nx">G</span><span class="p">[</span><span class="k">this</span><span class="p">]</span><span class="o">=</span><span class="nx">F</span><span class="p">});</span><span class="k">return</span> <span class="nx">G</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">L</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="nx">J</span><span class="p">,</span><span class="nx">L</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">F</span><span class="p">;</span><span class="nx">H</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">H</span><span class="p">],</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="nx">H</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">E</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">H</span><span class="p">],</span><span class="s2">&quot;display&quot;</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">H</span><span class="p">].</span><span class="nx">tagName</span><span class="p">,</span><span class="nx">K</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">G</span><span class="p">]){</span><span class="nx">K</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">G</span><span class="p">]}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;&lt;&quot;</span><span class="o">+</span><span class="nx">G</span><span class="o">+</span><span class="s2">&quot; /&gt;&quot;</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">);</span><span class="nx">K</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="o">===</span><span class="s2">&quot;none&quot;</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">}</span><span class="nx">I</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">m</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="nx">K</span><span class="p">}</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">H</span><span class="p">],</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">)}}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">F</span><span class="p">;</span><span class="nx">H</span><span class="o">++</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="nx">H</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">H</span><span class="p">],</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;hide&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">G</span><span class="o">&lt;</span><span class="nx">F</span><span class="p">;</span><span class="nx">G</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="o">!==</span><span class="s2">&quot;none&quot;</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="s2">&quot;olddisplay&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="s2">&quot;display&quot;</span><span class="p">))}}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">G</span><span class="o">&lt;</span><span class="nx">F</span><span class="p">;</span><span class="nx">G</span><span class="o">++</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="nx">G</span><span class="p">].</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">_toggle</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">toggle</span><span class="p">,</span><span class="nx">toggle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">G</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">G</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">F</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_toggle</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)</span><span class="o">:</span><span class="nx">G</span><span class="o">==</span><span class="kc">null</span><span class="o">||</span><span class="nx">E</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">E</span><span class="o">?</span><span class="nx">G</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">)[</span><span class="nx">H</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">]()})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;toggle&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">)},</span><span class="nx">fadeTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">G</span><span class="p">},</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">)},</span><span class="nx">animate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">speed</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="nx">E</span><span class="p">.</span><span class="nx">queue</span><span class="o">===</span><span class="kc">false</span><span class="o">?</span><span class="s2">&quot;each&quot;</span><span class="o">:</span><span class="s2">&quot;queue&quot;</span><span class="p">](</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">E</span><span class="p">),</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">),</span><span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">M</span> <span class="k">in</span> <span class="nx">I</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">M</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;hide&quot;</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="o">||</span><span class="nx">I</span><span class="p">[</span><span class="nx">M</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;show&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">L</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="p">.</span><span class="nx">complete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="k">if</span><span class="p">((</span><span class="nx">M</span><span class="o">==</span><span class="s2">&quot;height&quot;</span><span class="o">||</span><span class="nx">M</span><span class="o">==</span><span class="s2">&quot;width&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">);</span><span class="nx">K</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">overflow</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">}</span><span class="nx">K</span><span class="p">.</span><span class="nx">curAnim</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">I</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="nx">S</span><span class="p">){</span><span class="kd">var</span> <span class="nx">R</span><span class="o">=</span><span class="k">new</span> <span class="nx">o</span><span class="p">.</span><span class="nx">fx</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="sr">/toggle|show|hide/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">S</span><span class="p">)){</span><span class="nx">R</span><span class="p">[</span><span class="nx">S</span><span class="o">==</span><span class="s2">&quot;toggle&quot;</span><span class="o">?</span><span class="nx">L</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="o">:</span><span class="nx">S</span><span class="p">](</span><span class="nx">I</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=</span><span class="nx">S</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^([+-]=)?([\d+-.]+)(.*)$/</span><span class="p">),</span><span class="nx">T</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">cur</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="p">){</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">Q</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">P</span><span class="o">=</span><span class="nx">Q</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="o">!=</span><span class="s2">&quot;px&quot;</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">O</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">N</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">P</span><span class="p">;</span><span class="nx">T</span><span class="o">=</span><span class="p">((</span><span class="nx">N</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">R</span><span class="p">.</span><span class="nx">cur</span><span class="p">(</span><span class="kc">true</span><span class="p">))</span><span class="o">*</span><span class="nx">T</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">O</span><span class="p">]</span><span class="o">=</span><span class="nx">T</span><span class="o">+</span><span class="nx">P</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="nx">N</span><span class="o">=</span><span class="p">((</span><span class="nx">Q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;-=&quot;</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">N</span><span class="p">)</span><span class="o">+</span><span class="nx">T</span><span class="p">}</span><span class="nx">R</span><span class="p">.</span><span class="nx">custom</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">P</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">R</span><span class="p">.</span><span class="nx">custom</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">S</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}}});</span><span class="k">return</span> <span class="kc">true</span><span class="p">})},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">timers</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">queue</span><span class="p">([])}</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">H</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="o">--</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">H</span><span class="p">].</span><span class="nx">elem</span><span class="o">==</span><span class="k">this</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">G</span><span class="p">[</span><span class="nx">H</span><span class="p">](</span><span class="kc">true</span><span class="p">)}</span><span class="nx">G</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="mi">1</span><span class="p">)}}});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">()}</span><span class="k">return</span> <span class="k">this</span><span class="p">}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">({</span><span class="nx">slideDown</span><span class="o">:</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;show&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">slideUp</span><span class="o">:</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;hide&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">slideToggle</span><span class="o">:</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;toggle&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">fadeIn</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;show&quot;</span><span class="p">},</span><span class="nx">fadeOut</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">}},</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">)}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">speed</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">G</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">?</span><span class="nx">G</span><span class="o">:</span><span class="p">{</span><span class="nx">complete</span><span class="o">:</span><span class="nx">F</span><span class="o">||!</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">G</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">,</span><span class="nx">duration</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">easing</span><span class="o">:</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="o">||</span><span class="nx">H</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">H</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">};</span><span class="nx">E</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">off</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">typeof</span> <span class="nx">E</span><span class="p">.</span><span class="nx">duration</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">?</span><span class="nx">E</span><span class="p">.</span><span class="nx">duration</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">[</span><span class="nx">E</span><span class="p">.</span><span class="nx">duration</span><span class="p">]</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">speeds</span><span class="p">.</span><span class="nx">_default</span><span class="p">;</span><span class="nx">E</span><span class="p">.</span><span class="nx">old</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">complete</span><span class="p">;</span><span class="nx">E</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">queue</span><span class="o">!==</span><span class="kc">false</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">dequeue</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">old</span><span class="p">)){</span><span class="nx">E</span><span class="p">.</span><span class="nx">old</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">)}};</span><span class="k">return</span> <span class="nx">E</span><span class="p">},</span><span class="nx">easing</span><span class="o">:</span><span class="p">{</span><span class="nx">linear</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="o">+</span><span class="nx">F</span><span class="o">*</span><span class="nx">G</span><span class="p">},</span><span class="nx">swing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span><span class="p">((</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">G</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="mf">0.5</span><span class="p">)</span><span class="o">*</span><span class="nx">F</span><span class="o">+</span><span class="nx">E</span><span class="p">}},</span><span class="nx">timers</span><span class="o">:</span><span class="p">[],</span><span class="nx">fx</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="o">=</span><span class="nx">F</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">.</span><span class="nx">orig</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">orig</span><span class="o">=</span><span class="p">{}}}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="p">,</span><span class="k">this</span><span class="p">)}(</span><span class="nx">o</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">step</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">fx</span><span class="p">.</span><span class="nx">step</span><span class="p">.</span><span class="nx">_default</span><span class="p">)(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">==</span><span class="s2">&quot;height&quot;</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">==</span><span class="s2">&quot;width&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">}},</span><span class="nx">cur</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">==</span><span class="kc">null</span><span class="p">)){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">,</span><span class="nx">F</span><span class="p">));</span><span class="k">return</span> <span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="o">&gt;-</span><span class="mi">10000</span><span class="o">?</span><span class="nx">E</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">curCSS</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">},</span><span class="nx">custom</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">startTime</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">=</span><span class="nx">G</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">unit</span><span class="o">||</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">step</span><span class="p">(</span><span class="nx">J</span><span class="p">)}</span><span class="nx">F</span><span class="p">.</span><span class="nx">elem</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">timers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">F</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">timers</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">J</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">J</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="p">[</span><span class="nx">J</span><span class="p">]()){</span><span class="nx">K</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">J</span><span class="o">--</span><span class="p">,</span><span class="mi">1</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">}},</span><span class="mi">13</span><span class="p">)}},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">orig</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">show</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">custom</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">==</span><span class="s2">&quot;width&quot;</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="o">==</span><span class="s2">&quot;height&quot;</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cur</span><span class="p">());</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">).</span><span class="nx">show</span><span class="p">()},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">orig</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">hide</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">custom</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cur</span><span class="p">(),</span><span class="mi">0</span><span class="p">)},</span><span class="nx">step</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">e</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">||</span><span class="nx">G</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">duration</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">startTime</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">curAnim</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">F</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">curAnim</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">curAnim</span><span class="p">[</span><span class="nx">F</span><span class="p">]</span><span class="o">!==</span><span class="kc">true</span><span class="p">){</span><span class="nx">E</span><span class="o">=</span><span class="kc">false</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">display</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">overflow</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">display</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;none&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">hide</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">).</span><span class="nx">hide</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">hide</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">show</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">I</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">curAnim</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">orig</span><span class="p">[</span><span class="nx">I</span><span class="p">])}}</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">complete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elem</span><span class="p">)}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">G</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">startTime</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="nx">J</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">duration</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">easing</span><span class="o">||</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">easing</span><span class="p">.</span><span class="nx">swing</span><span class="o">?</span><span class="s2">&quot;swing&quot;</span><span class="o">:</span><span class="s2">&quot;linear&quot;</span><span class="p">)](</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">duration</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="o">+</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()}</span><span class="k">return</span> <span class="kc">true</span><span class="p">}};</span><span class="nx">o</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">fx</span><span class="p">,{</span><span class="nx">speeds</span><span class="o">:</span><span class="p">{</span><span class="nx">slow</span><span class="o">:</span><span class="mi">600</span><span class="p">,</span><span class="nx">fast</span><span class="o">:</span><span class="mi">200</span><span class="p">,</span><span class="nx">_default</span><span class="o">:</span><span class="mi">400</span><span class="p">},</span><span class="nx">step</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">now</span><span class="p">)},</span><span class="nx">_default</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">E</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">!=</span><span class="kc">null</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">elem</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">E</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">now</span><span class="o">+</span><span class="nx">E</span><span class="p">.</span><span class="nx">unit</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">E</span><span class="p">.</span><span class="nx">elem</span><span class="p">[</span><span class="nx">E</span><span class="p">.</span><span class="nx">prop</span><span class="p">]</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">now</span><span class="p">}}}});</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">body</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">bodyOffset</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">])}</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">(),</span><span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">)</span><span class="o">-</span><span class="nx">L</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nx">F</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)</span><span class="o">-</span><span class="nx">K</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">I</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">H</span><span class="p">}}}</span><span class="k">else</span><span class="p">{</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">body</span><span class="p">){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">bodyOffset</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">])}</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">initialized</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">initialize</span><span class="p">();</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">G</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nx">J</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="kc">null</span><span class="p">),</span><span class="nx">N</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="k">while</span><span class="p">((</span><span class="nx">J</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="o">!==</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="o">!==</span><span class="nx">H</span><span class="p">){</span><span class="nx">M</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">N</span><span class="o">-=</span><span class="nx">J</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">I</span><span class="o">-=</span><span class="nx">J</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="o">===</span><span class="nx">G</span><span class="p">){</span><span class="nx">N</span><span class="o">+=</span><span class="nx">J</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">I</span><span class="o">+=</span><span class="nx">J</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">doesNotAddBorder</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">doesAddBorderForTableAndCells</span><span class="o">&amp;&amp;</span><span class="sr">/^t(able|d|h)$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">tagName</span><span class="p">))){</span><span class="nx">N</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">borderTopWidth</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">borderLeftWidth</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="nx">F</span><span class="o">=</span><span class="nx">G</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">subtractsBorderForOverflowNotVisible</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">.</span><span class="nx">overflow</span><span class="o">!==</span><span class="s2">&quot;visible&quot;</span><span class="p">){</span><span class="nx">N</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">borderTopWidth</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">borderLeftWidth</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="nx">E</span><span class="o">=</span><span class="nx">M</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="s2">&quot;relative&quot;</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="s2">&quot;static&quot;</span><span class="p">){</span><span class="nx">N</span><span class="o">+=</span><span class="nx">K</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">I</span><span class="o">+=</span><span class="nx">K</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="s2">&quot;fixed&quot;</span><span class="p">){</span><span class="nx">N</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">K</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">),</span><span class="nx">I</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">K</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)}</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">N</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">I</span><span class="p">}}}</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="p">{</span><span class="nx">initialize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">initialized</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">marginTop</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="s1">&#39;&lt;div style=&quot;position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;table style=&quot;position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#39;</span><span class="p">;</span><span class="nx">M</span><span class="o">=</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;1px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;1px&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="nx">E</span> <span class="k">in</span> <span class="nx">M</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="nx">M</span><span class="p">[</span><span class="nx">E</span><span class="p">]}</span><span class="nx">F</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="nx">L</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">H</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doesNotAddBorder</span><span class="o">=</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">!==</span><span class="mi">5</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">doesAddBorderForTableAndCells</span><span class="o">=</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===</span><span class="mi">5</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">H</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;relative&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">subtractsBorderForOverflowNotVisible</span><span class="o">=</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===-</span><span class="mi">5</span><span class="p">);</span><span class="nx">L</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">marginTop</span><span class="o">=</span><span class="s2">&quot;1px&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">doesNotIncludeMarginInBodyOffset</span><span class="o">=</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===</span><span class="mi">0</span><span class="p">);</span><span class="nx">L</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">marginTop</span><span class="o">=</span><span class="nx">J</span><span class="p">;</span><span class="nx">L</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">F</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">initialized</span><span class="o">=</span><span class="kc">true</span><span class="p">},</span><span class="nx">bodyOffset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">initialized</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">initialize</span><span class="p">();</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">.</span><span class="nx">doesNotIncludeMarginInBodyOffset</span><span class="p">){</span><span class="nx">G</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">curCSS</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;marginTop&quot;</span><span class="p">,</span><span class="kc">true</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">curCSS</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;marginLeft&quot;</span><span class="p">,</span><span class="kc">true</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">F</span><span class="p">}}};</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">(),</span><span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">(),</span><span class="nx">E</span><span class="o">=</span><span class="sr">/^body|html$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">tagName</span><span class="p">)</span><span class="o">?</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="o">:</span><span class="nx">G</span><span class="p">.</span><span class="nx">offset</span><span class="p">();</span><span class="nx">J</span><span class="p">.</span><span class="nx">top</span><span class="o">-=</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;marginTop&quot;</span><span class="p">);</span><span class="nx">J</span><span class="p">.</span><span class="nx">left</span><span class="o">-=</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;marginLeft&quot;</span><span class="p">);</span><span class="nx">E</span><span class="p">.</span><span class="nx">top</span><span class="o">+=</span><span class="nx">j</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="s2">&quot;borderTopWidth&quot;</span><span class="p">);</span><span class="nx">E</span><span class="p">.</span><span class="nx">left</span><span class="o">+=</span><span class="nx">j</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="s2">&quot;borderLeftWidth&quot;</span><span class="p">);</span><span class="nx">F</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">J</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">E</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">J</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">E</span><span class="p">.</span><span class="nx">left</span><span class="p">}}</span><span class="k">return</span> <span class="nx">F</span><span class="p">},</span><span class="nx">offsetParent</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetParent</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="sr">/^body|html$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">tagName</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="s2">&quot;position&quot;</span><span class="p">)</span><span class="o">==</span><span class="s2">&quot;static&quot;</span><span class="p">)){</span><span class="nx">E</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">}</span><span class="k">return</span> <span class="nx">o</span><span class="p">(</span><span class="nx">E</span><span class="p">)}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;Left&quot;</span><span class="p">,</span><span class="s2">&quot;Top&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="s2">&quot;scroll&quot;</span><span class="o">+</span><span class="nx">E</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="nx">H</span><span class="o">!==</span><span class="nx">g</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="o">==</span><span class="nx">l</span><span class="o">||</span><span class="k">this</span><span class="o">==</span><span class="nb">document</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="o">?</span><span class="nx">H</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">scrollLeft</span><span class="p">(),</span><span class="nx">F</span><span class="o">?</span><span class="nx">H</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">scrollTop</span><span class="p">())</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="nx">H</span><span class="p">})</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">l</span><span class="o">||</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nb">document</span><span class="o">?</span><span class="nx">self</span><span class="p">[</span><span class="nx">F</span><span class="o">?</span><span class="s2">&quot;pageYOffset&quot;</span><span class="o">:</span><span class="s2">&quot;pageXOffset&quot;</span><span class="p">]</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">boxModel</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">G</span><span class="p">]}});</span><span class="nx">o</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;Height&quot;</span><span class="p">,</span><span class="s2">&quot;Width&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">I</span><span class="o">?</span><span class="s2">&quot;Left&quot;</span><span class="o">:</span><span class="s2">&quot;Top&quot;</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">I</span><span class="o">?</span><span class="s2">&quot;Right&quot;</span><span class="o">:</span><span class="s2">&quot;Bottom&quot;</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="s2">&quot;inner&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">F</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="s2">&quot;padding&quot;</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="s2">&quot;outer&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">F</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="nx">K</span><span class="o">?</span><span class="s2">&quot;margin&quot;</span><span class="o">:</span><span class="s2">&quot;border&quot;</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">o</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">J</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">l</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">compatMode</span><span class="o">==</span><span class="s2">&quot;CSS1Compat&quot;</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="s2">&quot;client&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">]</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="s2">&quot;client&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">]</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nb">document</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="s2">&quot;client&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">],</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="s2">&quot;scroll&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">],</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="s2">&quot;scroll&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">],</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="s2">&quot;offset&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">],</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="s2">&quot;offset&quot;</span><span class="o">+</span><span class="nx">G</span><span class="p">])</span><span class="o">:</span><span class="nx">K</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">J</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">K</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">K</span><span class="o">:</span><span class="nx">K</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)}})})();</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>
      </div>
    </div>

  </div>

<div class="frame frame-loading large-loading-area" style="display:none;" data-tree-list-url="/loudpixel/highcharts-rails/tree-list/dd4355a3587431608553e6cc347260fecf207239" data-blob-url-prefix="/loudpixel/highcharts-rails/blob/dd4355a3587431608553e6cc347260fecf207239">
  <img src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-64.gif?1334862346" height="64" width="64">
</div>

      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer" >
        
  <div class="upper_footer">
     <div class="container clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="https://github.com/training">Training</a></li>
         <li><a href="http://enterprise.github.com/">GitHub Enterprise</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://get.gaug.es/">Gauges: Analyze web traffic</a></li>
         <li><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></li>
         <li><a href="https://gist.github.com">Gist: Code snippets</a></li>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://windows.github.com/">GitHub for Windows</a></li>
         <li><a href="http://mobile.github.com/">Issues for iPhone</a></li>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Extras</h4>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="container clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
          <li><a href="https://github.com/site/terms">Terms of Service</a></li>
          <li><a href="https://github.com/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2012 <span title="0.12859s from fe13.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

      <div class="sponsor">
        <a href="http://www.rackspace.com" class="logo">
          <img alt="Dedicated Server" height="36" src="https://a248.e.akamai.net/assets.github.com/images/modules/footer/rackspaces_logo.png?1334862346" width="38" />
        </a>
        Powered by the <a href="http://www.rackspace.com ">Dedicated
        Servers</a> and<br/> <a href="http://www.rackspacecloud.com">Cloud
        Computing</a> of Rackspace Hosting<span>&reg;</span>
      </div>
  </div><!-- /.site -->
</div><!-- /.lower_footer -->

      </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
        <dd>Submit comment</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>

  <div style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first">
        <h3>Browsing Commits</h3>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>escape</dt>
          <dd>Close form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>p</dt>
          <dd>Parent commit</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o</dt>
          <dd>Other parent commit</dd>
        </dl>
      </div>
    </div>
  </div>
</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div id="ajax-error-message">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="ajax-error-dismiss">Dismiss</a>
    </div>

    <div id="logo-popup">
      <h2>Looking for the GitHub logo?</h2>
      <ul>
        <li>
          <h4>GitHub Logo</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip"><img alt="Github_logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/github_logo.png?1334862345" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip" class="minibutton btn-download download"><span class="icon"></span>Download</a>
        </li>
        <li>
          <h4>The Octocat</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip"><img alt="Octocat" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/octocat.png?1334862345" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip" class="minibutton btn-download download"><span class="icon"></span>Download</a>
        </li>
      </ul>
    </div>

    
    
    
    <span id='server_response_time' data-time='0.13119' data-host='fe13'></span>
  </body>
</html>

